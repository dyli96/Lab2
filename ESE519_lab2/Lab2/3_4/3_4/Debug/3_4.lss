
3_4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  000007bc  00000850  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007bc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080012a  0080012a  0000087a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000087a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000918  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008ad  00000000  00000000  00000950  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000785  00000000  00000000  000011fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000376  00000000  00000000  00001982  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000078  00000000  00000000  00001cf8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003db  00000000  00000000  00001d70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000122  00000000  00000000  0000214b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  0000226d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec eb       	ldi	r30, 0xBC	; 188
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 32       	cpi	r26, 0x2A	; 42
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e2       	ldi	r26, 0x2A	; 42
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 33       	cpi	r26, 0x30	; 48
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 89 00 	call	0x112	; 0x112 <main>
  9e:	0c 94 dc 03 	jmp	0x7b8	; 0x7b8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_putchar>:
void uart_init(void);

static FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
static FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

int uart_putchar(char c, FILE *stream) {
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
	if (c == '\n') {
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <uart_putchar+0xe>
		uart_putchar('\r', stream);
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
  b4:	e0 ec       	ldi	r30, 0xC0	; 192
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	85 ff       	sbrs	r24, 5
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <uart_putchar+0x12>
	UDR0 = c;
  be:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <uart_getchar>:

int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
  ca:	e0 ec       	ldi	r30, 0xC0	; 192
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	88 23       	and	r24, r24
  d2:	ec f7       	brge	.-6      	; 0xce <uart_getchar+0x4>
	return UDR0;
  d4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	08 95       	ret

000000dc <uart_init>:

void uart_init(void) {
	UBRR0H = UBRRH_VALUE;
  dc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
  e0:	87 e6       	ldi	r24, 0x67	; 103
  e2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
  e6:	e0 ec       	ldi	r30, 0xC0	; 192
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	8d 7f       	andi	r24, 0xFD	; 253
  ee:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
  f0:	86 e0       	ldi	r24, 0x06	; 6
  f2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
  f6:	88 e1       	ldi	r24, 0x18	; 24
  f8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

    // Redirect stdin and stdout so functions like printf and getchar work.
	stdout = &uart_output;
  fc:	ea e2       	ldi	r30, 0x2A	; 42
  fe:	f1 e0       	ldi	r31, 0x01	; 1
 100:	8e e0       	ldi	r24, 0x0E	; 14
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	93 83       	std	Z+3, r25	; 0x03
 106:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	91 83       	std	Z+1, r25	; 0x01
 10e:	80 83       	st	Z, r24
 110:	08 95       	ret

00000112 <main>:


int main(void)
{
	/* Replace with your application code */
	uart_init();
 112:	0e 94 6e 00 	call	0xdc	; 0xdc <uart_init>
	//DDRC |= 0x01;// PC0

	DDRB |= 0x08;
 116:	23 9a       	sbi	0x04, 3	; 4
	DDRD |= 0x28;
 118:	8a b1       	in	r24, 0x0a	; 10
 11a:	88 62       	ori	r24, 0x28	; 40
 11c:	8a b9       	out	0x0a, r24	; 10
	TCCR2A |= 0x20;
 11e:	e0 eb       	ldi	r30, 0xB0	; 176
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	80 62       	ori	r24, 0x20	; 32
 126:	80 83       	st	Z, r24
	TCCR2A |= 0x03;
 128:	80 81       	ld	r24, Z
 12a:	83 60       	ori	r24, 0x03	; 3
 12c:	80 83       	st	Z, r24
	TCCR2B |= 0x08;
 12e:	e1 eb       	ldi	r30, 0xB1	; 177
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	88 60       	ori	r24, 0x08	; 8
 136:	80 83       	st	Z, r24
	TCCR2B |= 0x05;
 138:	80 81       	ld	r24, Z
 13a:	85 60       	ori	r24, 0x05	; 5
 13c:	80 83       	st	Z, r24

	
	OCR2A = 155;
 13e:	8b e9       	ldi	r24, 0x9B	; 155
 140:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>

	//OCR2B = 62;



	ADCSRA |= (1 << ADPS0) | (1 << ADPS1) | (1 << ADPS2); // 128 prescaling
 144:	ea e7       	ldi	r30, 0x7A	; 122
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	87 60       	ori	r24, 0x07	; 7
 14c:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADATE);//free mode
 14e:	80 81       	ld	r24, Z
 150:	80 62       	ori	r24, 0x20	; 32
 152:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN);//power up ADC
 154:	80 81       	ld	r24, Z
 156:	80 68       	ori	r24, 0x80	; 128
 158:	80 83       	st	Z, r24


	ADMUX |= (1 << REFS0); //AVcc
 15a:	ac e7       	ldi	r26, 0x7C	; 124
 15c:	b0 e0       	ldi	r27, 0x00	; 0
 15e:	8c 91       	ld	r24, X
 160:	80 64       	ori	r24, 0x40	; 64
 162:	8c 93       	st	X, r24
	//ADMUX &= ~(1 << REFS1);
	ADCSRB |= (0 <<ADTS2) | (0 << ADTS1) | (0 <<ADTS0);//free running
 164:	ab e7       	ldi	r26, 0x7B	; 123
 166:	b0 e0       	ldi	r27, 0x00	; 0
 168:	8c 91       	ld	r24, X
 16a:	8c 93       	st	X, r24

	ADCSRA |= (1 << ADSC);//start converting
 16c:	80 81       	ld	r24, Z
 16e:	80 64       	ori	r24, 0x40	; 64
 170:	80 83       	st	Z, r24

	//	_delay_ms(50);
	while (1)
	{
		printf("%d\n",ADC);
 172:	0f 2e       	mov	r0, r31
 174:	f8 e7       	ldi	r31, 0x78	; 120
 176:	cf 2e       	mov	r12, r31
 178:	d1 2c       	mov	r13, r1
 17a:	f0 2d       	mov	r31, r0
 17c:	0f 2e       	mov	r0, r31
 17e:	fc e1       	ldi	r31, 0x1C	; 28
 180:	ef 2e       	mov	r14, r31
 182:	f1 e0       	ldi	r31, 0x01	; 1
 184:	ff 2e       	mov	r15, r31
 186:	f0 2d       	mov	r31, r0
	
		OCR2B = (int)(OCR2A * ADC / 1024); 
 188:	0f 2e       	mov	r0, r31
 18a:	f3 eb       	ldi	r31, 0xB3	; 179
 18c:	af 2e       	mov	r10, r31
 18e:	b1 2c       	mov	r11, r1
 190:	f0 2d       	mov	r31, r0
 192:	04 eb       	ldi	r16, 0xB4	; 180
 194:	10 e0       	ldi	r17, 0x00	; 0
		

		printf("%d OCR \n", OCR2B);
 196:	c0 e2       	ldi	r28, 0x20	; 32
 198:	d1 e0       	ldi	r29, 0x01	; 1
	ADCSRA |= (1 << ADSC);//start converting

	//	_delay_ms(50);
	while (1)
	{
		printf("%d\n",ADC);
 19a:	f6 01       	movw	r30, r12
 19c:	80 81       	ld	r24, Z
 19e:	91 81       	ldd	r25, Z+1	; 0x01
 1a0:	9f 93       	push	r25
 1a2:	8f 93       	push	r24
 1a4:	ff 92       	push	r15
 1a6:	ef 92       	push	r14
 1a8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <printf>
	
		OCR2B = (int)(OCR2A * ADC / 1024); 
 1ac:	f5 01       	movw	r30, r10
 1ae:	40 81       	ld	r20, Z
 1b0:	f6 01       	movw	r30, r12
 1b2:	20 81       	ld	r18, Z
 1b4:	31 81       	ldd	r19, Z+1	; 0x01
 1b6:	42 9f       	mul	r20, r18
 1b8:	c0 01       	movw	r24, r0
 1ba:	43 9f       	mul	r20, r19
 1bc:	90 0d       	add	r25, r0
 1be:	11 24       	eor	r1, r1
 1c0:	89 2f       	mov	r24, r25
 1c2:	86 95       	lsr	r24
 1c4:	86 95       	lsr	r24
 1c6:	f8 01       	movw	r30, r16
 1c8:	80 83       	st	Z, r24
		

		printf("%d OCR \n", OCR2B);
 1ca:	80 81       	ld	r24, Z
 1cc:	1f 92       	push	r1
 1ce:	8f 93       	push	r24
 1d0:	df 93       	push	r29
 1d2:	cf 93       	push	r28
 1d4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1d8:	8f e3       	ldi	r24, 0x3F	; 63
 1da:	9d e0       	ldi	r25, 0x0D	; 13
 1dc:	e3 e0       	ldi	r30, 0x03	; 3
 1de:	81 50       	subi	r24, 0x01	; 1
 1e0:	90 40       	sbci	r25, 0x00	; 0
 1e2:	e0 40       	sbci	r30, 0x00	; 0
 1e4:	e1 f7       	brne	.-8      	; 0x1de <main+0xcc>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <main+0xd6>
 1e8:	00 00       	nop
 1ea:	8d b7       	in	r24, 0x3d	; 61
 1ec:	9e b7       	in	r25, 0x3e	; 62
 1ee:	08 96       	adiw	r24, 0x08	; 8
 1f0:	0f b6       	in	r0, 0x3f	; 63
 1f2:	f8 94       	cli
 1f4:	9e bf       	out	0x3e, r25	; 62
 1f6:	0f be       	out	0x3f, r0	; 63
 1f8:	8d bf       	out	0x3d, r24	; 61
 1fa:	cf cf       	rjmp	.-98     	; 0x19a <main+0x88>

000001fc <printf>:
 1fc:	a0 e0       	ldi	r26, 0x00	; 0
 1fe:	b0 e0       	ldi	r27, 0x00	; 0
 200:	e4 e0       	ldi	r30, 0x04	; 4
 202:	f1 e0       	ldi	r31, 0x01	; 1
 204:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__prologue_saves__+0x20>
 208:	ae 01       	movw	r20, r28
 20a:	4b 5f       	subi	r20, 0xFB	; 251
 20c:	5f 4f       	sbci	r21, 0xFF	; 255
 20e:	fa 01       	movw	r30, r20
 210:	61 91       	ld	r22, Z+
 212:	71 91       	ld	r23, Z+
 214:	af 01       	movw	r20, r30
 216:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <__data_end+0x2>
 21a:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <__data_end+0x3>
 21e:	0e 94 14 01 	call	0x228	; 0x228 <vfprintf>
 222:	e2 e0       	ldi	r30, 0x02	; 2
 224:	0c 94 d1 03 	jmp	0x7a2	; 0x7a2 <__epilogue_restores__+0x20>

00000228 <vfprintf>:
 228:	ab e0       	ldi	r26, 0x0B	; 11
 22a:	b0 e0       	ldi	r27, 0x00	; 0
 22c:	ea e1       	ldi	r30, 0x1A	; 26
 22e:	f1 e0       	ldi	r31, 0x01	; 1
 230:	0c 94 a5 03 	jmp	0x74a	; 0x74a <__prologue_saves__>
 234:	6c 01       	movw	r12, r24
 236:	7b 01       	movw	r14, r22
 238:	8a 01       	movw	r16, r20
 23a:	fc 01       	movw	r30, r24
 23c:	17 82       	std	Z+7, r1	; 0x07
 23e:	16 82       	std	Z+6, r1	; 0x06
 240:	83 81       	ldd	r24, Z+3	; 0x03
 242:	81 ff       	sbrs	r24, 1
 244:	cc c1       	rjmp	.+920    	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 246:	ce 01       	movw	r24, r28
 248:	01 96       	adiw	r24, 0x01	; 1
 24a:	3c 01       	movw	r6, r24
 24c:	f6 01       	movw	r30, r12
 24e:	93 81       	ldd	r25, Z+3	; 0x03
 250:	f7 01       	movw	r30, r14
 252:	93 fd       	sbrc	r25, 3
 254:	85 91       	lpm	r24, Z+
 256:	93 ff       	sbrs	r25, 3
 258:	81 91       	ld	r24, Z+
 25a:	7f 01       	movw	r14, r30
 25c:	88 23       	and	r24, r24
 25e:	09 f4       	brne	.+2      	; 0x262 <vfprintf+0x3a>
 260:	ba c1       	rjmp	.+884    	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 262:	85 32       	cpi	r24, 0x25	; 37
 264:	39 f4       	brne	.+14     	; 0x274 <vfprintf+0x4c>
 266:	93 fd       	sbrc	r25, 3
 268:	85 91       	lpm	r24, Z+
 26a:	93 ff       	sbrs	r25, 3
 26c:	81 91       	ld	r24, Z+
 26e:	7f 01       	movw	r14, r30
 270:	85 32       	cpi	r24, 0x25	; 37
 272:	29 f4       	brne	.+10     	; 0x27e <vfprintf+0x56>
 274:	b6 01       	movw	r22, r12
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	0e 94 0b 03 	call	0x616	; 0x616 <fputc>
 27c:	e7 cf       	rjmp	.-50     	; 0x24c <vfprintf+0x24>
 27e:	91 2c       	mov	r9, r1
 280:	21 2c       	mov	r2, r1
 282:	31 2c       	mov	r3, r1
 284:	ff e1       	ldi	r31, 0x1F	; 31
 286:	f3 15       	cp	r31, r3
 288:	d8 f0       	brcs	.+54     	; 0x2c0 <vfprintf+0x98>
 28a:	8b 32       	cpi	r24, 0x2B	; 43
 28c:	79 f0       	breq	.+30     	; 0x2ac <vfprintf+0x84>
 28e:	38 f4       	brcc	.+14     	; 0x29e <vfprintf+0x76>
 290:	80 32       	cpi	r24, 0x20	; 32
 292:	79 f0       	breq	.+30     	; 0x2b2 <vfprintf+0x8a>
 294:	83 32       	cpi	r24, 0x23	; 35
 296:	a1 f4       	brne	.+40     	; 0x2c0 <vfprintf+0x98>
 298:	23 2d       	mov	r18, r3
 29a:	20 61       	ori	r18, 0x10	; 16
 29c:	1d c0       	rjmp	.+58     	; 0x2d8 <vfprintf+0xb0>
 29e:	8d 32       	cpi	r24, 0x2D	; 45
 2a0:	61 f0       	breq	.+24     	; 0x2ba <vfprintf+0x92>
 2a2:	80 33       	cpi	r24, 0x30	; 48
 2a4:	69 f4       	brne	.+26     	; 0x2c0 <vfprintf+0x98>
 2a6:	23 2d       	mov	r18, r3
 2a8:	21 60       	ori	r18, 0x01	; 1
 2aa:	16 c0       	rjmp	.+44     	; 0x2d8 <vfprintf+0xb0>
 2ac:	83 2d       	mov	r24, r3
 2ae:	82 60       	ori	r24, 0x02	; 2
 2b0:	38 2e       	mov	r3, r24
 2b2:	e3 2d       	mov	r30, r3
 2b4:	e4 60       	ori	r30, 0x04	; 4
 2b6:	3e 2e       	mov	r3, r30
 2b8:	2a c0       	rjmp	.+84     	; 0x30e <vfprintf+0xe6>
 2ba:	f3 2d       	mov	r31, r3
 2bc:	f8 60       	ori	r31, 0x08	; 8
 2be:	1d c0       	rjmp	.+58     	; 0x2fa <vfprintf+0xd2>
 2c0:	37 fc       	sbrc	r3, 7
 2c2:	2d c0       	rjmp	.+90     	; 0x31e <vfprintf+0xf6>
 2c4:	20 ed       	ldi	r18, 0xD0	; 208
 2c6:	28 0f       	add	r18, r24
 2c8:	2a 30       	cpi	r18, 0x0A	; 10
 2ca:	40 f0       	brcs	.+16     	; 0x2dc <vfprintf+0xb4>
 2cc:	8e 32       	cpi	r24, 0x2E	; 46
 2ce:	b9 f4       	brne	.+46     	; 0x2fe <vfprintf+0xd6>
 2d0:	36 fc       	sbrc	r3, 6
 2d2:	81 c1       	rjmp	.+770    	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 2d4:	23 2d       	mov	r18, r3
 2d6:	20 64       	ori	r18, 0x40	; 64
 2d8:	32 2e       	mov	r3, r18
 2da:	19 c0       	rjmp	.+50     	; 0x30e <vfprintf+0xe6>
 2dc:	36 fe       	sbrs	r3, 6
 2de:	06 c0       	rjmp	.+12     	; 0x2ec <vfprintf+0xc4>
 2e0:	8a e0       	ldi	r24, 0x0A	; 10
 2e2:	98 9e       	mul	r9, r24
 2e4:	20 0d       	add	r18, r0
 2e6:	11 24       	eor	r1, r1
 2e8:	92 2e       	mov	r9, r18
 2ea:	11 c0       	rjmp	.+34     	; 0x30e <vfprintf+0xe6>
 2ec:	ea e0       	ldi	r30, 0x0A	; 10
 2ee:	2e 9e       	mul	r2, r30
 2f0:	20 0d       	add	r18, r0
 2f2:	11 24       	eor	r1, r1
 2f4:	22 2e       	mov	r2, r18
 2f6:	f3 2d       	mov	r31, r3
 2f8:	f0 62       	ori	r31, 0x20	; 32
 2fa:	3f 2e       	mov	r3, r31
 2fc:	08 c0       	rjmp	.+16     	; 0x30e <vfprintf+0xe6>
 2fe:	8c 36       	cpi	r24, 0x6C	; 108
 300:	21 f4       	brne	.+8      	; 0x30a <vfprintf+0xe2>
 302:	83 2d       	mov	r24, r3
 304:	80 68       	ori	r24, 0x80	; 128
 306:	38 2e       	mov	r3, r24
 308:	02 c0       	rjmp	.+4      	; 0x30e <vfprintf+0xe6>
 30a:	88 36       	cpi	r24, 0x68	; 104
 30c:	41 f4       	brne	.+16     	; 0x31e <vfprintf+0xf6>
 30e:	f7 01       	movw	r30, r14
 310:	93 fd       	sbrc	r25, 3
 312:	85 91       	lpm	r24, Z+
 314:	93 ff       	sbrs	r25, 3
 316:	81 91       	ld	r24, Z+
 318:	7f 01       	movw	r14, r30
 31a:	81 11       	cpse	r24, r1
 31c:	b3 cf       	rjmp	.-154    	; 0x284 <vfprintf+0x5c>
 31e:	98 2f       	mov	r25, r24
 320:	9f 7d       	andi	r25, 0xDF	; 223
 322:	95 54       	subi	r25, 0x45	; 69
 324:	93 30       	cpi	r25, 0x03	; 3
 326:	28 f4       	brcc	.+10     	; 0x332 <vfprintf+0x10a>
 328:	0c 5f       	subi	r16, 0xFC	; 252
 32a:	1f 4f       	sbci	r17, 0xFF	; 255
 32c:	9f e3       	ldi	r25, 0x3F	; 63
 32e:	99 83       	std	Y+1, r25	; 0x01
 330:	0d c0       	rjmp	.+26     	; 0x34c <vfprintf+0x124>
 332:	83 36       	cpi	r24, 0x63	; 99
 334:	31 f0       	breq	.+12     	; 0x342 <vfprintf+0x11a>
 336:	83 37       	cpi	r24, 0x73	; 115
 338:	71 f0       	breq	.+28     	; 0x356 <vfprintf+0x12e>
 33a:	83 35       	cpi	r24, 0x53	; 83
 33c:	09 f0       	breq	.+2      	; 0x340 <vfprintf+0x118>
 33e:	59 c0       	rjmp	.+178    	; 0x3f2 <vfprintf+0x1ca>
 340:	21 c0       	rjmp	.+66     	; 0x384 <vfprintf+0x15c>
 342:	f8 01       	movw	r30, r16
 344:	80 81       	ld	r24, Z
 346:	89 83       	std	Y+1, r24	; 0x01
 348:	0e 5f       	subi	r16, 0xFE	; 254
 34a:	1f 4f       	sbci	r17, 0xFF	; 255
 34c:	88 24       	eor	r8, r8
 34e:	83 94       	inc	r8
 350:	91 2c       	mov	r9, r1
 352:	53 01       	movw	r10, r6
 354:	13 c0       	rjmp	.+38     	; 0x37c <vfprintf+0x154>
 356:	28 01       	movw	r4, r16
 358:	f2 e0       	ldi	r31, 0x02	; 2
 35a:	4f 0e       	add	r4, r31
 35c:	51 1c       	adc	r5, r1
 35e:	f8 01       	movw	r30, r16
 360:	a0 80       	ld	r10, Z
 362:	b1 80       	ldd	r11, Z+1	; 0x01
 364:	36 fe       	sbrs	r3, 6
 366:	03 c0       	rjmp	.+6      	; 0x36e <vfprintf+0x146>
 368:	69 2d       	mov	r22, r9
 36a:	70 e0       	ldi	r23, 0x00	; 0
 36c:	02 c0       	rjmp	.+4      	; 0x372 <vfprintf+0x14a>
 36e:	6f ef       	ldi	r22, 0xFF	; 255
 370:	7f ef       	ldi	r23, 0xFF	; 255
 372:	c5 01       	movw	r24, r10
 374:	0e 94 00 03 	call	0x600	; 0x600 <strnlen>
 378:	4c 01       	movw	r8, r24
 37a:	82 01       	movw	r16, r4
 37c:	f3 2d       	mov	r31, r3
 37e:	ff 77       	andi	r31, 0x7F	; 127
 380:	3f 2e       	mov	r3, r31
 382:	16 c0       	rjmp	.+44     	; 0x3b0 <vfprintf+0x188>
 384:	28 01       	movw	r4, r16
 386:	22 e0       	ldi	r18, 0x02	; 2
 388:	42 0e       	add	r4, r18
 38a:	51 1c       	adc	r5, r1
 38c:	f8 01       	movw	r30, r16
 38e:	a0 80       	ld	r10, Z
 390:	b1 80       	ldd	r11, Z+1	; 0x01
 392:	36 fe       	sbrs	r3, 6
 394:	03 c0       	rjmp	.+6      	; 0x39c <vfprintf+0x174>
 396:	69 2d       	mov	r22, r9
 398:	70 e0       	ldi	r23, 0x00	; 0
 39a:	02 c0       	rjmp	.+4      	; 0x3a0 <vfprintf+0x178>
 39c:	6f ef       	ldi	r22, 0xFF	; 255
 39e:	7f ef       	ldi	r23, 0xFF	; 255
 3a0:	c5 01       	movw	r24, r10
 3a2:	0e 94 f5 02 	call	0x5ea	; 0x5ea <strnlen_P>
 3a6:	4c 01       	movw	r8, r24
 3a8:	f3 2d       	mov	r31, r3
 3aa:	f0 68       	ori	r31, 0x80	; 128
 3ac:	3f 2e       	mov	r3, r31
 3ae:	82 01       	movw	r16, r4
 3b0:	33 fc       	sbrc	r3, 3
 3b2:	1b c0       	rjmp	.+54     	; 0x3ea <vfprintf+0x1c2>
 3b4:	82 2d       	mov	r24, r2
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	88 16       	cp	r8, r24
 3ba:	99 06       	cpc	r9, r25
 3bc:	b0 f4       	brcc	.+44     	; 0x3ea <vfprintf+0x1c2>
 3be:	b6 01       	movw	r22, r12
 3c0:	80 e2       	ldi	r24, 0x20	; 32
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	0e 94 0b 03 	call	0x616	; 0x616 <fputc>
 3c8:	2a 94       	dec	r2
 3ca:	f4 cf       	rjmp	.-24     	; 0x3b4 <vfprintf+0x18c>
 3cc:	f5 01       	movw	r30, r10
 3ce:	37 fc       	sbrc	r3, 7
 3d0:	85 91       	lpm	r24, Z+
 3d2:	37 fe       	sbrs	r3, 7
 3d4:	81 91       	ld	r24, Z+
 3d6:	5f 01       	movw	r10, r30
 3d8:	b6 01       	movw	r22, r12
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	0e 94 0b 03 	call	0x616	; 0x616 <fputc>
 3e0:	21 10       	cpse	r2, r1
 3e2:	2a 94       	dec	r2
 3e4:	21 e0       	ldi	r18, 0x01	; 1
 3e6:	82 1a       	sub	r8, r18
 3e8:	91 08       	sbc	r9, r1
 3ea:	81 14       	cp	r8, r1
 3ec:	91 04       	cpc	r9, r1
 3ee:	71 f7       	brne	.-36     	; 0x3cc <vfprintf+0x1a4>
 3f0:	e8 c0       	rjmp	.+464    	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 3f2:	84 36       	cpi	r24, 0x64	; 100
 3f4:	11 f0       	breq	.+4      	; 0x3fa <vfprintf+0x1d2>
 3f6:	89 36       	cpi	r24, 0x69	; 105
 3f8:	41 f5       	brne	.+80     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 3fa:	f8 01       	movw	r30, r16
 3fc:	37 fe       	sbrs	r3, 7
 3fe:	07 c0       	rjmp	.+14     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 400:	60 81       	ld	r22, Z
 402:	71 81       	ldd	r23, Z+1	; 0x01
 404:	82 81       	ldd	r24, Z+2	; 0x02
 406:	93 81       	ldd	r25, Z+3	; 0x03
 408:	0c 5f       	subi	r16, 0xFC	; 252
 40a:	1f 4f       	sbci	r17, 0xFF	; 255
 40c:	08 c0       	rjmp	.+16     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 40e:	60 81       	ld	r22, Z
 410:	71 81       	ldd	r23, Z+1	; 0x01
 412:	07 2e       	mov	r0, r23
 414:	00 0c       	add	r0, r0
 416:	88 0b       	sbc	r24, r24
 418:	99 0b       	sbc	r25, r25
 41a:	0e 5f       	subi	r16, 0xFE	; 254
 41c:	1f 4f       	sbci	r17, 0xFF	; 255
 41e:	f3 2d       	mov	r31, r3
 420:	ff 76       	andi	r31, 0x6F	; 111
 422:	3f 2e       	mov	r3, r31
 424:	97 ff       	sbrs	r25, 7
 426:	09 c0       	rjmp	.+18     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 428:	90 95       	com	r25
 42a:	80 95       	com	r24
 42c:	70 95       	com	r23
 42e:	61 95       	neg	r22
 430:	7f 4f       	sbci	r23, 0xFF	; 255
 432:	8f 4f       	sbci	r24, 0xFF	; 255
 434:	9f 4f       	sbci	r25, 0xFF	; 255
 436:	f0 68       	ori	r31, 0x80	; 128
 438:	3f 2e       	mov	r3, r31
 43a:	2a e0       	ldi	r18, 0x0A	; 10
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	a3 01       	movw	r20, r6
 440:	0e 94 47 03 	call	0x68e	; 0x68e <__ultoa_invert>
 444:	88 2e       	mov	r8, r24
 446:	86 18       	sub	r8, r6
 448:	45 c0       	rjmp	.+138    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 44a:	85 37       	cpi	r24, 0x75	; 117
 44c:	31 f4       	brne	.+12     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 44e:	23 2d       	mov	r18, r3
 450:	2f 7e       	andi	r18, 0xEF	; 239
 452:	b2 2e       	mov	r11, r18
 454:	2a e0       	ldi	r18, 0x0A	; 10
 456:	30 e0       	ldi	r19, 0x00	; 0
 458:	25 c0       	rjmp	.+74     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 45a:	93 2d       	mov	r25, r3
 45c:	99 7f       	andi	r25, 0xF9	; 249
 45e:	b9 2e       	mov	r11, r25
 460:	8f 36       	cpi	r24, 0x6F	; 111
 462:	c1 f0       	breq	.+48     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 464:	18 f4       	brcc	.+6      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 466:	88 35       	cpi	r24, 0x58	; 88
 468:	79 f0       	breq	.+30     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 46a:	b5 c0       	rjmp	.+362    	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 46c:	80 37       	cpi	r24, 0x70	; 112
 46e:	19 f0       	breq	.+6      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 470:	88 37       	cpi	r24, 0x78	; 120
 472:	21 f0       	breq	.+8      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 474:	b0 c0       	rjmp	.+352    	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 476:	e9 2f       	mov	r30, r25
 478:	e0 61       	ori	r30, 0x10	; 16
 47a:	be 2e       	mov	r11, r30
 47c:	b4 fe       	sbrs	r11, 4
 47e:	0d c0       	rjmp	.+26     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 480:	fb 2d       	mov	r31, r11
 482:	f4 60       	ori	r31, 0x04	; 4
 484:	bf 2e       	mov	r11, r31
 486:	09 c0       	rjmp	.+18     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 488:	34 fe       	sbrs	r3, 4
 48a:	0a c0       	rjmp	.+20     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 48c:	29 2f       	mov	r18, r25
 48e:	26 60       	ori	r18, 0x06	; 6
 490:	b2 2e       	mov	r11, r18
 492:	06 c0       	rjmp	.+12     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 494:	28 e0       	ldi	r18, 0x08	; 8
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	05 c0       	rjmp	.+10     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 49a:	20 e1       	ldi	r18, 0x10	; 16
 49c:	30 e0       	ldi	r19, 0x00	; 0
 49e:	02 c0       	rjmp	.+4      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 4a0:	20 e1       	ldi	r18, 0x10	; 16
 4a2:	32 e0       	ldi	r19, 0x02	; 2
 4a4:	f8 01       	movw	r30, r16
 4a6:	b7 fe       	sbrs	r11, 7
 4a8:	07 c0       	rjmp	.+14     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4aa:	60 81       	ld	r22, Z
 4ac:	71 81       	ldd	r23, Z+1	; 0x01
 4ae:	82 81       	ldd	r24, Z+2	; 0x02
 4b0:	93 81       	ldd	r25, Z+3	; 0x03
 4b2:	0c 5f       	subi	r16, 0xFC	; 252
 4b4:	1f 4f       	sbci	r17, 0xFF	; 255
 4b6:	06 c0       	rjmp	.+12     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4b8:	60 81       	ld	r22, Z
 4ba:	71 81       	ldd	r23, Z+1	; 0x01
 4bc:	80 e0       	ldi	r24, 0x00	; 0
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	0e 5f       	subi	r16, 0xFE	; 254
 4c2:	1f 4f       	sbci	r17, 0xFF	; 255
 4c4:	a3 01       	movw	r20, r6
 4c6:	0e 94 47 03 	call	0x68e	; 0x68e <__ultoa_invert>
 4ca:	88 2e       	mov	r8, r24
 4cc:	86 18       	sub	r8, r6
 4ce:	fb 2d       	mov	r31, r11
 4d0:	ff 77       	andi	r31, 0x7F	; 127
 4d2:	3f 2e       	mov	r3, r31
 4d4:	36 fe       	sbrs	r3, 6
 4d6:	0d c0       	rjmp	.+26     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4d8:	23 2d       	mov	r18, r3
 4da:	2e 7f       	andi	r18, 0xFE	; 254
 4dc:	a2 2e       	mov	r10, r18
 4de:	89 14       	cp	r8, r9
 4e0:	58 f4       	brcc	.+22     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4e2:	34 fe       	sbrs	r3, 4
 4e4:	0b c0       	rjmp	.+22     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4e6:	32 fc       	sbrc	r3, 2
 4e8:	09 c0       	rjmp	.+18     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4ea:	83 2d       	mov	r24, r3
 4ec:	8e 7e       	andi	r24, 0xEE	; 238
 4ee:	a8 2e       	mov	r10, r24
 4f0:	05 c0       	rjmp	.+10     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4f2:	b8 2c       	mov	r11, r8
 4f4:	a3 2c       	mov	r10, r3
 4f6:	03 c0       	rjmp	.+6      	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4f8:	b8 2c       	mov	r11, r8
 4fa:	01 c0       	rjmp	.+2      	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4fc:	b9 2c       	mov	r11, r9
 4fe:	a4 fe       	sbrs	r10, 4
 500:	0f c0       	rjmp	.+30     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 502:	fe 01       	movw	r30, r28
 504:	e8 0d       	add	r30, r8
 506:	f1 1d       	adc	r31, r1
 508:	80 81       	ld	r24, Z
 50a:	80 33       	cpi	r24, 0x30	; 48
 50c:	21 f4       	brne	.+8      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 50e:	9a 2d       	mov	r25, r10
 510:	99 7e       	andi	r25, 0xE9	; 233
 512:	a9 2e       	mov	r10, r25
 514:	09 c0       	rjmp	.+18     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 516:	a2 fe       	sbrs	r10, 2
 518:	06 c0       	rjmp	.+12     	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 51a:	b3 94       	inc	r11
 51c:	b3 94       	inc	r11
 51e:	04 c0       	rjmp	.+8      	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 520:	8a 2d       	mov	r24, r10
 522:	86 78       	andi	r24, 0x86	; 134
 524:	09 f0       	breq	.+2      	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 526:	b3 94       	inc	r11
 528:	a3 fc       	sbrc	r10, 3
 52a:	11 c0       	rjmp	.+34     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 52c:	a0 fe       	sbrs	r10, 0
 52e:	06 c0       	rjmp	.+12     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 530:	b2 14       	cp	r11, r2
 532:	88 f4       	brcc	.+34     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 534:	28 0c       	add	r2, r8
 536:	92 2c       	mov	r9, r2
 538:	9b 18       	sub	r9, r11
 53a:	0e c0       	rjmp	.+28     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 53c:	b2 14       	cp	r11, r2
 53e:	60 f4       	brcc	.+24     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 540:	b6 01       	movw	r22, r12
 542:	80 e2       	ldi	r24, 0x20	; 32
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	0e 94 0b 03 	call	0x616	; 0x616 <fputc>
 54a:	b3 94       	inc	r11
 54c:	f7 cf       	rjmp	.-18     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 54e:	b2 14       	cp	r11, r2
 550:	18 f4       	brcc	.+6      	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 552:	2b 18       	sub	r2, r11
 554:	02 c0       	rjmp	.+4      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 556:	98 2c       	mov	r9, r8
 558:	21 2c       	mov	r2, r1
 55a:	a4 fe       	sbrs	r10, 4
 55c:	10 c0       	rjmp	.+32     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 55e:	b6 01       	movw	r22, r12
 560:	80 e3       	ldi	r24, 0x30	; 48
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	0e 94 0b 03 	call	0x616	; 0x616 <fputc>
 568:	a2 fe       	sbrs	r10, 2
 56a:	17 c0       	rjmp	.+46     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 56c:	a1 fc       	sbrc	r10, 1
 56e:	03 c0       	rjmp	.+6      	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 570:	88 e7       	ldi	r24, 0x78	; 120
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	02 c0       	rjmp	.+4      	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 576:	88 e5       	ldi	r24, 0x58	; 88
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	b6 01       	movw	r22, r12
 57c:	0c c0       	rjmp	.+24     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 57e:	8a 2d       	mov	r24, r10
 580:	86 78       	andi	r24, 0x86	; 134
 582:	59 f0       	breq	.+22     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 584:	a1 fe       	sbrs	r10, 1
 586:	02 c0       	rjmp	.+4      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 588:	8b e2       	ldi	r24, 0x2B	; 43
 58a:	01 c0       	rjmp	.+2      	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 58c:	80 e2       	ldi	r24, 0x20	; 32
 58e:	a7 fc       	sbrc	r10, 7
 590:	8d e2       	ldi	r24, 0x2D	; 45
 592:	b6 01       	movw	r22, r12
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	0e 94 0b 03 	call	0x616	; 0x616 <fputc>
 59a:	89 14       	cp	r8, r9
 59c:	38 f4       	brcc	.+14     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 59e:	b6 01       	movw	r22, r12
 5a0:	80 e3       	ldi	r24, 0x30	; 48
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	0e 94 0b 03 	call	0x616	; 0x616 <fputc>
 5a8:	9a 94       	dec	r9
 5aa:	f7 cf       	rjmp	.-18     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 5ac:	8a 94       	dec	r8
 5ae:	f3 01       	movw	r30, r6
 5b0:	e8 0d       	add	r30, r8
 5b2:	f1 1d       	adc	r31, r1
 5b4:	80 81       	ld	r24, Z
 5b6:	b6 01       	movw	r22, r12
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	0e 94 0b 03 	call	0x616	; 0x616 <fputc>
 5be:	81 10       	cpse	r8, r1
 5c0:	f5 cf       	rjmp	.-22     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5c2:	22 20       	and	r2, r2
 5c4:	09 f4       	brne	.+2      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5c6:	42 ce       	rjmp	.-892    	; 0x24c <vfprintf+0x24>
 5c8:	b6 01       	movw	r22, r12
 5ca:	80 e2       	ldi	r24, 0x20	; 32
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	0e 94 0b 03 	call	0x616	; 0x616 <fputc>
 5d2:	2a 94       	dec	r2
 5d4:	f6 cf       	rjmp	.-20     	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 5d6:	f6 01       	movw	r30, r12
 5d8:	86 81       	ldd	r24, Z+6	; 0x06
 5da:	97 81       	ldd	r25, Z+7	; 0x07
 5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5de:	8f ef       	ldi	r24, 0xFF	; 255
 5e0:	9f ef       	ldi	r25, 0xFF	; 255
 5e2:	2b 96       	adiw	r28, 0x0b	; 11
 5e4:	e2 e1       	ldi	r30, 0x12	; 18
 5e6:	0c 94 c1 03 	jmp	0x782	; 0x782 <__epilogue_restores__>

000005ea <strnlen_P>:
 5ea:	fc 01       	movw	r30, r24
 5ec:	05 90       	lpm	r0, Z+
 5ee:	61 50       	subi	r22, 0x01	; 1
 5f0:	70 40       	sbci	r23, 0x00	; 0
 5f2:	01 10       	cpse	r0, r1
 5f4:	d8 f7       	brcc	.-10     	; 0x5ec <strnlen_P+0x2>
 5f6:	80 95       	com	r24
 5f8:	90 95       	com	r25
 5fa:	8e 0f       	add	r24, r30
 5fc:	9f 1f       	adc	r25, r31
 5fe:	08 95       	ret

00000600 <strnlen>:
 600:	fc 01       	movw	r30, r24
 602:	61 50       	subi	r22, 0x01	; 1
 604:	70 40       	sbci	r23, 0x00	; 0
 606:	01 90       	ld	r0, Z+
 608:	01 10       	cpse	r0, r1
 60a:	d8 f7       	brcc	.-10     	; 0x602 <strnlen+0x2>
 60c:	80 95       	com	r24
 60e:	90 95       	com	r25
 610:	8e 0f       	add	r24, r30
 612:	9f 1f       	adc	r25, r31
 614:	08 95       	ret

00000616 <fputc>:
 616:	0f 93       	push	r16
 618:	1f 93       	push	r17
 61a:	cf 93       	push	r28
 61c:	df 93       	push	r29
 61e:	fb 01       	movw	r30, r22
 620:	23 81       	ldd	r18, Z+3	; 0x03
 622:	21 fd       	sbrc	r18, 1
 624:	03 c0       	rjmp	.+6      	; 0x62c <fputc+0x16>
 626:	8f ef       	ldi	r24, 0xFF	; 255
 628:	9f ef       	ldi	r25, 0xFF	; 255
 62a:	2c c0       	rjmp	.+88     	; 0x684 <fputc+0x6e>
 62c:	22 ff       	sbrs	r18, 2
 62e:	16 c0       	rjmp	.+44     	; 0x65c <fputc+0x46>
 630:	46 81       	ldd	r20, Z+6	; 0x06
 632:	57 81       	ldd	r21, Z+7	; 0x07
 634:	24 81       	ldd	r18, Z+4	; 0x04
 636:	35 81       	ldd	r19, Z+5	; 0x05
 638:	42 17       	cp	r20, r18
 63a:	53 07       	cpc	r21, r19
 63c:	44 f4       	brge	.+16     	; 0x64e <fputc+0x38>
 63e:	a0 81       	ld	r26, Z
 640:	b1 81       	ldd	r27, Z+1	; 0x01
 642:	9d 01       	movw	r18, r26
 644:	2f 5f       	subi	r18, 0xFF	; 255
 646:	3f 4f       	sbci	r19, 0xFF	; 255
 648:	31 83       	std	Z+1, r19	; 0x01
 64a:	20 83       	st	Z, r18
 64c:	8c 93       	st	X, r24
 64e:	26 81       	ldd	r18, Z+6	; 0x06
 650:	37 81       	ldd	r19, Z+7	; 0x07
 652:	2f 5f       	subi	r18, 0xFF	; 255
 654:	3f 4f       	sbci	r19, 0xFF	; 255
 656:	37 83       	std	Z+7, r19	; 0x07
 658:	26 83       	std	Z+6, r18	; 0x06
 65a:	14 c0       	rjmp	.+40     	; 0x684 <fputc+0x6e>
 65c:	8b 01       	movw	r16, r22
 65e:	ec 01       	movw	r28, r24
 660:	fb 01       	movw	r30, r22
 662:	00 84       	ldd	r0, Z+8	; 0x08
 664:	f1 85       	ldd	r31, Z+9	; 0x09
 666:	e0 2d       	mov	r30, r0
 668:	09 95       	icall
 66a:	89 2b       	or	r24, r25
 66c:	e1 f6       	brne	.-72     	; 0x626 <fputc+0x10>
 66e:	d8 01       	movw	r26, r16
 670:	16 96       	adiw	r26, 0x06	; 6
 672:	8d 91       	ld	r24, X+
 674:	9c 91       	ld	r25, X
 676:	17 97       	sbiw	r26, 0x07	; 7
 678:	01 96       	adiw	r24, 0x01	; 1
 67a:	17 96       	adiw	r26, 0x07	; 7
 67c:	9c 93       	st	X, r25
 67e:	8e 93       	st	-X, r24
 680:	16 97       	sbiw	r26, 0x06	; 6
 682:	ce 01       	movw	r24, r28
 684:	df 91       	pop	r29
 686:	cf 91       	pop	r28
 688:	1f 91       	pop	r17
 68a:	0f 91       	pop	r16
 68c:	08 95       	ret

0000068e <__ultoa_invert>:
 68e:	fa 01       	movw	r30, r20
 690:	aa 27       	eor	r26, r26
 692:	28 30       	cpi	r18, 0x08	; 8
 694:	51 f1       	breq	.+84     	; 0x6ea <__ultoa_invert+0x5c>
 696:	20 31       	cpi	r18, 0x10	; 16
 698:	81 f1       	breq	.+96     	; 0x6fa <__ultoa_invert+0x6c>
 69a:	e8 94       	clt
 69c:	6f 93       	push	r22
 69e:	6e 7f       	andi	r22, 0xFE	; 254
 6a0:	6e 5f       	subi	r22, 0xFE	; 254
 6a2:	7f 4f       	sbci	r23, 0xFF	; 255
 6a4:	8f 4f       	sbci	r24, 0xFF	; 255
 6a6:	9f 4f       	sbci	r25, 0xFF	; 255
 6a8:	af 4f       	sbci	r26, 0xFF	; 255
 6aa:	b1 e0       	ldi	r27, 0x01	; 1
 6ac:	3e d0       	rcall	.+124    	; 0x72a <__ultoa_invert+0x9c>
 6ae:	b4 e0       	ldi	r27, 0x04	; 4
 6b0:	3c d0       	rcall	.+120    	; 0x72a <__ultoa_invert+0x9c>
 6b2:	67 0f       	add	r22, r23
 6b4:	78 1f       	adc	r23, r24
 6b6:	89 1f       	adc	r24, r25
 6b8:	9a 1f       	adc	r25, r26
 6ba:	a1 1d       	adc	r26, r1
 6bc:	68 0f       	add	r22, r24
 6be:	79 1f       	adc	r23, r25
 6c0:	8a 1f       	adc	r24, r26
 6c2:	91 1d       	adc	r25, r1
 6c4:	a1 1d       	adc	r26, r1
 6c6:	6a 0f       	add	r22, r26
 6c8:	71 1d       	adc	r23, r1
 6ca:	81 1d       	adc	r24, r1
 6cc:	91 1d       	adc	r25, r1
 6ce:	a1 1d       	adc	r26, r1
 6d0:	20 d0       	rcall	.+64     	; 0x712 <__ultoa_invert+0x84>
 6d2:	09 f4       	brne	.+2      	; 0x6d6 <__ultoa_invert+0x48>
 6d4:	68 94       	set
 6d6:	3f 91       	pop	r19
 6d8:	2a e0       	ldi	r18, 0x0A	; 10
 6da:	26 9f       	mul	r18, r22
 6dc:	11 24       	eor	r1, r1
 6de:	30 19       	sub	r19, r0
 6e0:	30 5d       	subi	r19, 0xD0	; 208
 6e2:	31 93       	st	Z+, r19
 6e4:	de f6       	brtc	.-74     	; 0x69c <__ultoa_invert+0xe>
 6e6:	cf 01       	movw	r24, r30
 6e8:	08 95       	ret
 6ea:	46 2f       	mov	r20, r22
 6ec:	47 70       	andi	r20, 0x07	; 7
 6ee:	40 5d       	subi	r20, 0xD0	; 208
 6f0:	41 93       	st	Z+, r20
 6f2:	b3 e0       	ldi	r27, 0x03	; 3
 6f4:	0f d0       	rcall	.+30     	; 0x714 <__ultoa_invert+0x86>
 6f6:	c9 f7       	brne	.-14     	; 0x6ea <__ultoa_invert+0x5c>
 6f8:	f6 cf       	rjmp	.-20     	; 0x6e6 <__ultoa_invert+0x58>
 6fa:	46 2f       	mov	r20, r22
 6fc:	4f 70       	andi	r20, 0x0F	; 15
 6fe:	40 5d       	subi	r20, 0xD0	; 208
 700:	4a 33       	cpi	r20, 0x3A	; 58
 702:	18 f0       	brcs	.+6      	; 0x70a <__ultoa_invert+0x7c>
 704:	49 5d       	subi	r20, 0xD9	; 217
 706:	31 fd       	sbrc	r19, 1
 708:	40 52       	subi	r20, 0x20	; 32
 70a:	41 93       	st	Z+, r20
 70c:	02 d0       	rcall	.+4      	; 0x712 <__ultoa_invert+0x84>
 70e:	a9 f7       	brne	.-22     	; 0x6fa <__ultoa_invert+0x6c>
 710:	ea cf       	rjmp	.-44     	; 0x6e6 <__ultoa_invert+0x58>
 712:	b4 e0       	ldi	r27, 0x04	; 4
 714:	a6 95       	lsr	r26
 716:	97 95       	ror	r25
 718:	87 95       	ror	r24
 71a:	77 95       	ror	r23
 71c:	67 95       	ror	r22
 71e:	ba 95       	dec	r27
 720:	c9 f7       	brne	.-14     	; 0x714 <__ultoa_invert+0x86>
 722:	00 97       	sbiw	r24, 0x00	; 0
 724:	61 05       	cpc	r22, r1
 726:	71 05       	cpc	r23, r1
 728:	08 95       	ret
 72a:	9b 01       	movw	r18, r22
 72c:	ac 01       	movw	r20, r24
 72e:	0a 2e       	mov	r0, r26
 730:	06 94       	lsr	r0
 732:	57 95       	ror	r21
 734:	47 95       	ror	r20
 736:	37 95       	ror	r19
 738:	27 95       	ror	r18
 73a:	ba 95       	dec	r27
 73c:	c9 f7       	brne	.-14     	; 0x730 <__ultoa_invert+0xa2>
 73e:	62 0f       	add	r22, r18
 740:	73 1f       	adc	r23, r19
 742:	84 1f       	adc	r24, r20
 744:	95 1f       	adc	r25, r21
 746:	a0 1d       	adc	r26, r0
 748:	08 95       	ret

0000074a <__prologue_saves__>:
 74a:	2f 92       	push	r2
 74c:	3f 92       	push	r3
 74e:	4f 92       	push	r4
 750:	5f 92       	push	r5
 752:	6f 92       	push	r6
 754:	7f 92       	push	r7
 756:	8f 92       	push	r8
 758:	9f 92       	push	r9
 75a:	af 92       	push	r10
 75c:	bf 92       	push	r11
 75e:	cf 92       	push	r12
 760:	df 92       	push	r13
 762:	ef 92       	push	r14
 764:	ff 92       	push	r15
 766:	0f 93       	push	r16
 768:	1f 93       	push	r17
 76a:	cf 93       	push	r28
 76c:	df 93       	push	r29
 76e:	cd b7       	in	r28, 0x3d	; 61
 770:	de b7       	in	r29, 0x3e	; 62
 772:	ca 1b       	sub	r28, r26
 774:	db 0b       	sbc	r29, r27
 776:	0f b6       	in	r0, 0x3f	; 63
 778:	f8 94       	cli
 77a:	de bf       	out	0x3e, r29	; 62
 77c:	0f be       	out	0x3f, r0	; 63
 77e:	cd bf       	out	0x3d, r28	; 61
 780:	09 94       	ijmp

00000782 <__epilogue_restores__>:
 782:	2a 88       	ldd	r2, Y+18	; 0x12
 784:	39 88       	ldd	r3, Y+17	; 0x11
 786:	48 88       	ldd	r4, Y+16	; 0x10
 788:	5f 84       	ldd	r5, Y+15	; 0x0f
 78a:	6e 84       	ldd	r6, Y+14	; 0x0e
 78c:	7d 84       	ldd	r7, Y+13	; 0x0d
 78e:	8c 84       	ldd	r8, Y+12	; 0x0c
 790:	9b 84       	ldd	r9, Y+11	; 0x0b
 792:	aa 84       	ldd	r10, Y+10	; 0x0a
 794:	b9 84       	ldd	r11, Y+9	; 0x09
 796:	c8 84       	ldd	r12, Y+8	; 0x08
 798:	df 80       	ldd	r13, Y+7	; 0x07
 79a:	ee 80       	ldd	r14, Y+6	; 0x06
 79c:	fd 80       	ldd	r15, Y+5	; 0x05
 79e:	0c 81       	ldd	r16, Y+4	; 0x04
 7a0:	1b 81       	ldd	r17, Y+3	; 0x03
 7a2:	aa 81       	ldd	r26, Y+2	; 0x02
 7a4:	b9 81       	ldd	r27, Y+1	; 0x01
 7a6:	ce 0f       	add	r28, r30
 7a8:	d1 1d       	adc	r29, r1
 7aa:	0f b6       	in	r0, 0x3f	; 63
 7ac:	f8 94       	cli
 7ae:	de bf       	out	0x3e, r29	; 62
 7b0:	0f be       	out	0x3f, r0	; 63
 7b2:	cd bf       	out	0x3d, r28	; 61
 7b4:	ed 01       	movw	r28, r26
 7b6:	08 95       	ret

000007b8 <_exit>:
 7b8:	f8 94       	cli

000007ba <__stop_program>:
 7ba:	ff cf       	rjmp	.-2      	; 0x7ba <__stop_program>
