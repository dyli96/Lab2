
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000080  00800100  00000a6a  00000afe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a6a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800180  00800180  00000b7e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b7e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bdc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a3a  00000000  00000000  00000c74  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007c3  00000000  00000000  000016ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000471  00000000  00000000  00001e71  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000013c  00000000  00000000  000022e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000044a  00000000  00000000  00002420  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003b0  00000000  00000000  0000286a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00002c1a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3b 00 	jmp	0x76	; 0x76 <__ctors_end>
   4:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   8:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
   c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  10:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  14:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  18:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  1c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  20:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  24:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  28:	0c 94 29 01 	jmp	0x252	; 0x252 <__vector_10>
  2c:	0c 94 0f 01 	jmp	0x21e	; 0x21e <__vector_11>
  30:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  34:	0c 94 e0 01 	jmp	0x3c0	; 0x3c0 <__vector_13>
  38:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  3c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  40:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  44:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  48:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  4c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  50:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  54:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  58:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  5c:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  60:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  64:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__bad_interrupt>
  68:	99 00       	.word	0x0099	; ????
  6a:	a3 00       	.word	0x00a3	; ????
  6c:	ac 00       	.word	0x00ac	; ????
  6e:	b5 00       	.word	0x00b5	; ????
  70:	be 00       	.word	0x00be	; ????
  72:	c7 00       	.word	0x00c7	; ????
  74:	d0 00       	.word	0x00d0	; ????

00000076 <__ctors_end>:
  76:	11 24       	eor	r1, r1
  78:	1f be       	out	0x3f, r1	; 63
  7a:	cf ef       	ldi	r28, 0xFF	; 255
  7c:	d8 e0       	ldi	r29, 0x08	; 8
  7e:	de bf       	out	0x3e, r29	; 62
  80:	cd bf       	out	0x3d, r28	; 61

00000082 <__do_copy_data>:
  82:	11 e0       	ldi	r17, 0x01	; 1
  84:	a0 e0       	ldi	r26, 0x00	; 0
  86:	b1 e0       	ldi	r27, 0x01	; 1
  88:	ea e6       	ldi	r30, 0x6A	; 106
  8a:	fa e0       	ldi	r31, 0x0A	; 10
  8c:	02 c0       	rjmp	.+4      	; 0x92 <__do_copy_data+0x10>
  8e:	05 90       	lpm	r0, Z+
  90:	0d 92       	st	X+, r0
  92:	a0 38       	cpi	r26, 0x80	; 128
  94:	b1 07       	cpc	r27, r17
  96:	d9 f7       	brne	.-10     	; 0x8e <__do_copy_data+0xc>

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e8       	ldi	r26, 0x80	; 128
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a2 39       	cpi	r26, 0x92	; 146
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <main>
  ac:	0c 94 33 05 	jmp	0xa66	; 0xa66 <_exit>

000000b0 <__bad_interrupt>:
  b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b4 <uart_putchar>:
void uart_init(void);

static FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
static FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

int uart_putchar(char c, FILE *stream) {
  b4:	cf 93       	push	r28
  b6:	c8 2f       	mov	r28, r24
	if (c == '\n') {
  b8:	8a 30       	cpi	r24, 0x0A	; 10
  ba:	19 f4       	brne	.+6      	; 0xc2 <uart_putchar+0xe>
		uart_putchar('\r', stream);
  bc:	8d e0       	ldi	r24, 0x0D	; 13
  be:	0e 94 5a 00 	call	0xb4	; 0xb4 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
  c2:	e0 ec       	ldi	r30, 0xC0	; 192
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	80 81       	ld	r24, Z
  c8:	85 ff       	sbrs	r24, 5
  ca:	fd cf       	rjmp	.-6      	; 0xc6 <uart_putchar+0x12>
	UDR0 = c;
  cc:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
  d0:	80 e0       	ldi	r24, 0x00	; 0
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	cf 91       	pop	r28
  d6:	08 95       	ret

000000d8 <uart_getchar>:

int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
  d8:	e0 ec       	ldi	r30, 0xC0	; 192
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	80 81       	ld	r24, Z
  de:	88 23       	and	r24, r24
  e0:	ec f7       	brge	.-6      	; 0xdc <uart_getchar+0x4>
	return UDR0;
  e2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	08 95       	ret

000000ea <uart_init>:

void uart_init(void) {
	UBRR0H = UBRRH_VALUE;
  ea:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
  ee:	87 e6       	ldi	r24, 0x67	; 103
  f0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
  f4:	e0 ec       	ldi	r30, 0xC0	; 192
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	8d 7f       	andi	r24, 0xFD	; 253
  fc:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
  fe:	86 e0       	ldi	r24, 0x06	; 6
 100:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
 104:	88 e1       	ldi	r24, 0x18	; 24
 106:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

    // Redirect stdin and stdout so functions like printf and getchar work.
	stdout = &uart_output;
 10a:	ec e8       	ldi	r30, 0x8C	; 140
 10c:	f1 e0       	ldi	r31, 0x01	; 1
 10e:	8f e0       	ldi	r24, 0x0F	; 15
 110:	91 e0       	ldi	r25, 0x01	; 1
 112:	93 83       	std	Z+3, r25	; 0x03
 114:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	91 e0       	ldi	r25, 0x01	; 1
 11a:	91 83       	std	Z+1, r25	; 0x01
 11c:	80 83       	st	Z, r24
 11e:	08 95       	ret

00000120 <GenerateDiscrete>:
int nMaxInterVal;
int nMinInterVal;

void GenerateDiscrete(int Val){
	//_delay_ms(1000);
	switch (Val){
 120:	87 30       	cpi	r24, 0x07	; 7
 122:	91 05       	cpc	r25, r1
 124:	08 f0       	brcs	.+2      	; 0x128 <GenerateDiscrete+0x8>
 126:	45 c0       	rjmp	.+138    	; 0x1b2 <GenerateDiscrete+0x92>
 128:	fc 01       	movw	r30, r24
 12a:	ec 5c       	subi	r30, 0xCC	; 204
 12c:	ff 4f       	sbci	r31, 0xFF	; 255
 12e:	0c 94 0b 02 	jmp	0x416	; 0x416 <__tablejump2__>

		case 0:
		
			PORTB &= 0xE3;
 132:	85 b1       	in	r24, 0x05	; 5
 134:	83 7e       	andi	r24, 0xE3	; 227
 136:	85 b9       	out	0x05, r24	; 5
			PORTB |= (0 << PORTB2) | ( 0<< PORTB3) | (0 << PORTB4);
 138:	85 b1       	in	r24, 0x05	; 5
 13a:	85 b9       	out	0x05, r24	; 5
			printf("case 0\n");
 13c:	8d e1       	ldi	r24, 0x1D	; 29
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	0e 94 3b 02 	call	0x476	; 0x476 <puts>
			break;
 144:	08 95       	ret

		case 1:
		
			PORTB &= 0xE7;
 146:	85 b1       	in	r24, 0x05	; 5
 148:	87 7e       	andi	r24, 0xE7	; 231
 14a:	85 b9       	out	0x05, r24	; 5
			PORTB |= (1 << PORTB2) | ( 0<< PORTB3) | (0 << PORTB4);
 14c:	2a 9a       	sbi	0x05, 2	; 5
			printf("case 1\n");
 14e:	84 e2       	ldi	r24, 0x24	; 36
 150:	91 e0       	ldi	r25, 0x01	; 1
 152:	0e 94 3b 02 	call	0x476	; 0x476 <puts>
			break;
 156:	08 95       	ret

		case 2:
		
			PORTB &= 0xEB;
 158:	85 b1       	in	r24, 0x05	; 5
 15a:	8b 7e       	andi	r24, 0xEB	; 235
 15c:	85 b9       	out	0x05, r24	; 5
			PORTB |= (0 << PORTB2) | ( 1<< PORTB3) | (0 << PORTB4);
 15e:	2b 9a       	sbi	0x05, 3	; 5
			printf("case 2\n");
 160:	8b e2       	ldi	r24, 0x2B	; 43
 162:	91 e0       	ldi	r25, 0x01	; 1
 164:	0e 94 3b 02 	call	0x476	; 0x476 <puts>
			break;
 168:	08 95       	ret
		
		case 3:

			PORTB &= 0xEF;
 16a:	2c 98       	cbi	0x05, 4	; 5
			PORTB |= (1 << PORTB2) | ( 1<< PORTB3) | (0 << PORTB4);
 16c:	85 b1       	in	r24, 0x05	; 5
 16e:	8c 60       	ori	r24, 0x0C	; 12
 170:	85 b9       	out	0x05, r24	; 5
			printf("case 3\n");
 172:	82 e3       	ldi	r24, 0x32	; 50
 174:	91 e0       	ldi	r25, 0x01	; 1
 176:	0e 94 3b 02 	call	0x476	; 0x476 <puts>
			break;
 17a:	08 95       	ret

		case 4:

			PORTB &= 0xF3;
 17c:	85 b1       	in	r24, 0x05	; 5
 17e:	83 7f       	andi	r24, 0xF3	; 243
 180:	85 b9       	out	0x05, r24	; 5
			PORTB |= (0 << PORTB2) | ( 0<< PORTB3) | (1 << PORTB4);
 182:	2c 9a       	sbi	0x05, 4	; 5
			printf("case 4\n");
 184:	89 e3       	ldi	r24, 0x39	; 57
 186:	91 e0       	ldi	r25, 0x01	; 1
 188:	0e 94 3b 02 	call	0x476	; 0x476 <puts>
			break;
 18c:	08 95       	ret
	
		case 5:
			
			PORTB &= 0xF7;
 18e:	2b 98       	cbi	0x05, 3	; 5
			PORTB |= (1 << PORTB2) | ( 0 << PORTB3) | (1 << PORTB4);
 190:	85 b1       	in	r24, 0x05	; 5
 192:	84 61       	ori	r24, 0x14	; 20
 194:	85 b9       	out	0x05, r24	; 5
			printf("case 5\n");
 196:	80 e4       	ldi	r24, 0x40	; 64
 198:	91 e0       	ldi	r25, 0x01	; 1
 19a:	0e 94 3b 02 	call	0x476	; 0x476 <puts>
			break;
 19e:	08 95       	ret

		case 6:
		
			PORTB &= 0xFB;
 1a0:	2a 98       	cbi	0x05, 2	; 5
			PORTB |= (0 << PORTB2) | ( 1<< PORTB3) | (1 << PORTB4);
 1a2:	85 b1       	in	r24, 0x05	; 5
 1a4:	88 61       	ori	r24, 0x18	; 24
 1a6:	85 b9       	out	0x05, r24	; 5
			printf("case 6\n");
 1a8:	87 e4       	ldi	r24, 0x47	; 71
 1aa:	91 e0       	ldi	r25, 0x01	; 1
 1ac:	0e 94 3b 02 	call	0x476	; 0x476 <puts>
			break;
 1b0:	08 95       	ret

		default:

			PORTB &= 0xFF;
 1b2:	85 b1       	in	r24, 0x05	; 5
 1b4:	85 b9       	out	0x05, r24	; 5
			PORTB |= (1 << PORTB2) | ( 1 << PORTB3) | (1 << PORTB4);
 1b6:	85 b1       	in	r24, 0x05	; 5
 1b8:	8c 61       	ori	r24, 0x1C	; 28
 1ba:	85 b9       	out	0x05, r24	; 5
			printf("case 7\n");
 1bc:	8e e4       	ldi	r24, 0x4E	; 78
 1be:	91 e0       	ldi	r25, 0x01	; 1
 1c0:	0e 94 3b 02 	call	0x476	; 0x476 <puts>
 1c4:	08 95       	ret

000001c6 <main>:
}


int main(void)
{
	uart_init();
 1c6:	0e 94 75 00 	call	0xea	; 0xea <uart_init>
    /* Replace with your application code */

	DDRB  = 0x1E; //set PB1 as output
 1ca:	8e e1       	ldi	r24, 0x1E	; 30
 1cc:	84 b9       	out	0x04, r24	; 4
	PORTB |= 0x22; //set PB1 high
 1ce:	85 b1       	in	r24, 0x05	; 5
 1d0:	82 62       	ori	r24, 0x22	; 34
 1d2:	85 b9       	out	0x05, r24	; 5

	TCNT1 = 0; //set timer1 to zero
 1d4:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 1d8:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	//TCCR1A |= (1 << COM1A0); // set output to zero compare
	TIMSK1 |= (1 << OCIE1A); //output compare enable
 1dc:	ef e6       	ldi	r30, 0x6F	; 111
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	82 60       	ori	r24, 0x02	; 2
 1e4:	80 83       	st	Z, r24
	OCR1A = 80; //5us
 1e6:	80 e5       	ldi	r24, 0x50	; 80
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1ee:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	TCCR1A |= (1 << COM1A0); //toggle(compare mode), output to PB1
 1f2:	e0 e8       	ldi	r30, 0x80	; 128
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	80 64       	ori	r24, 0x40	; 64
 1fa:	80 83       	st	Z, r24

	TCCR1B |= (1 << CS10); // prescaling clk/1
 1fc:	e1 e8       	ldi	r30, 0x81	; 129
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	80 81       	ld	r24, Z
 202:	81 60       	ori	r24, 0x01	; 1
 204:	80 83       	st	Z, r24
	sei();
 206:	78 94       	sei
		
	DDRD |= 0x40;
 208:	56 9a       	sbi	0x0a, 6	; 10
	TCCR0A |= 0x40;
 20a:	84 b5       	in	r24, 0x24	; 36
 20c:	80 64       	ori	r24, 0x40	; 64
 20e:	84 bd       	out	0x24, r24	; 36
	TCCR0A |= 0x02;
 210:	84 b5       	in	r24, 0x24	; 36
 212:	82 60       	ori	r24, 0x02	; 2
 214:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= 0x03;
 216:	85 b5       	in	r24, 0x25	; 37
 218:	83 60       	ori	r24, 0x03	; 3
 21a:	85 bd       	out	0x25, r24	; 37
 21c:	ff cf       	rjmp	.-2      	; 0x21c <main+0x56>

0000021e <__vector_11>:

    }
}


ISR(TIMER1_COMPA_vect){ 
 21e:	1f 92       	push	r1
 220:	0f 92       	push	r0
 222:	0f b6       	in	r0, 0x3f	; 63
 224:	0f 92       	push	r0
 226:	11 24       	eor	r1, r1
 228:	8f 93       	push	r24
 22a:	ef 93       	push	r30
 22c:	ff 93       	push	r31
	

	//TIMSK1 ^= (1 << OCIE1A);
	//DDRB |= 0x02; //set PB0 as input
	TIMSK1 |= (1 << ICIE1); // input capture enable, check PB0
 22e:	ef e6       	ldi	r30, 0x6F	; 111
 230:	f0 e0       	ldi	r31, 0x00	; 0
 232:	80 81       	ld	r24, Z
 234:	80 62       	ori	r24, 0x20	; 32
 236:	80 83       	st	Z, r24
	TCCR1B |= (1 << ICES1); //input rising edge select
 238:	e1 e8       	ldi	r30, 0x81	; 129
 23a:	f0 e0       	ldi	r31, 0x00	; 0
 23c:	80 81       	ld	r24, Z
 23e:	80 64       	ori	r24, 0x40	; 64
 240:	80 83       	st	Z, r24

	
	//nLoopCountDown = 0;
	//TIMSK1 = (0 << OCIE1A); 
		
}
 242:	ff 91       	pop	r31
 244:	ef 91       	pop	r30
 246:	8f 91       	pop	r24
 248:	0f 90       	pop	r0
 24a:	0f be       	out	0x3f, r0	; 63
 24c:	0f 90       	pop	r0
 24e:	1f 90       	pop	r1
 250:	18 95       	reti

00000252 <__vector_10>:

ISR(TIMER1_CAPT_vect){
 252:	1f 92       	push	r1
 254:	0f 92       	push	r0
 256:	0f b6       	in	r0, 0x3f	; 63
 258:	0f 92       	push	r0
 25a:	11 24       	eor	r1, r1
 25c:	2f 93       	push	r18
 25e:	3f 93       	push	r19
 260:	4f 93       	push	r20
 262:	5f 93       	push	r21
 264:	6f 93       	push	r22
 266:	7f 93       	push	r23
 268:	8f 93       	push	r24
 26a:	9f 93       	push	r25
 26c:	af 93       	push	r26
 26e:	bf 93       	push	r27
 270:	ef 93       	push	r30
 272:	ff 93       	push	r31

	//PORTB ^= (1 << PORTB4);	
	TCCR1B ^= (1 << ICES1); // input falling edge capture
 274:	e1 e8       	ldi	r30, 0x81	; 129
 276:	f0 e0       	ldi	r31, 0x00	; 0
 278:	90 81       	ld	r25, Z
 27a:	80 e4       	ldi	r24, 0x40	; 64
 27c:	89 27       	eor	r24, r25
 27e:	80 83       	st	Z, r24

	if (bIsTriggered){
 280:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 284:	88 23       	and	r24, r24
 286:	f1 f0       	breq	.+60     	; 0x2c4 <__vector_10+0x72>
		//printf("down edge triggered");
		nTimeStart = ICR1; //START
 288:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 28c:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 290:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <__data_end>
 294:	90 93 81 01 	sts	0x0181, r25	; 0x800181 <__data_end+0x1>
		nLoopCount = 0;
 298:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <nLoopCount+0x1>
 29c:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <nLoopCount>
		printf("Start time %d\n", nTimeStart);
 2a0:	9f 93       	push	r25
 2a2:	8f 93       	push	r24
 2a4:	85 e5       	ldi	r24, 0x55	; 85
 2a6:	91 e0       	ldi	r25, 0x01	; 1
 2a8:	9f 93       	push	r25
 2aa:	8f 93       	push	r24
 2ac:	0e 94 25 02 	call	0x44a	; 0x44a <printf>
		//printf("Start time %d\n", (int)nTimeStart);

		TIMSK1 |= (1 << TOIE1);  //overflow timer enabled
 2b0:	ef e6       	ldi	r30, 0x6F	; 111
 2b2:	f0 e0       	ldi	r31, 0x00	; 0
 2b4:	80 81       	ld	r24, Z
 2b6:	81 60       	ori	r24, 0x01	; 1
 2b8:	80 83       	st	Z, r24
 2ba:	0f 90       	pop	r0
 2bc:	0f 90       	pop	r0
 2be:	0f 90       	pop	r0
 2c0:	0f 90       	pop	r0
 2c2:	67 c0       	rjmp	.+206    	; 0x392 <__vector_10+0x140>
	}

	else{

		//printf("up edge triggered");
		TIMSK1 = (0 << TOIE1); //disable overflow interrupt
 2c4:	ef e6       	ldi	r30, 0x6F	; 111
 2c6:	f0 e0       	ldi	r31, 0x00	; 0
 2c8:	10 82       	st	Z, r1
		TIMSK1 = (1 << OCIE1A); //enable output compare interupt
 2ca:	82 e0       	ldi	r24, 0x02	; 2
 2cc:	80 83       	st	Z, r24

		nTimeEnd = ICR1 + nLoopCount * 256;
 2ce:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 2d2:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 2d6:	20 e0       	ldi	r18, 0x00	; 0
 2d8:	30 e0       	ldi	r19, 0x00	; 0
 2da:	30 91 86 01 	lds	r19, 0x0186	; 0x800186 <nLoopCount>
 2de:	82 0f       	add	r24, r18
 2e0:	93 1f       	adc	r25, r19
 2e2:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <nTimeEnd+0x1>
 2e6:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <nTimeEnd>
		
		nTimeInterval = nTimeEnd - nTimeStart;
 2ea:	20 91 80 01 	lds	r18, 0x0180	; 0x800180 <__data_end>
 2ee:	30 91 81 01 	lds	r19, 0x0181	; 0x800181 <__data_end+0x1>
 2f2:	82 1b       	sub	r24, r18
 2f4:	93 0b       	sbc	r25, r19
 2f6:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <nTimeInterval+0x1>
 2fa:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <nTimeInterval>
		printf("the  time interval is %d \n", nTimeInterval/16);
 2fe:	9c 01       	movw	r18, r24
 300:	99 23       	and	r25, r25
 302:	14 f4       	brge	.+4      	; 0x308 <__vector_10+0xb6>
 304:	21 5f       	subi	r18, 0xF1	; 241
 306:	3f 4f       	sbci	r19, 0xFF	; 255
 308:	35 95       	asr	r19
 30a:	27 95       	ror	r18
 30c:	35 95       	asr	r19
 30e:	27 95       	ror	r18
 310:	35 95       	asr	r19
 312:	27 95       	ror	r18
 314:	35 95       	asr	r19
 316:	27 95       	ror	r18
 318:	3f 93       	push	r19
 31a:	2f 93       	push	r18
 31c:	84 e6       	ldi	r24, 0x64	; 100
 31e:	91 e0       	ldi	r25, 0x01	; 1
 320:	9f 93       	push	r25
 322:	8f 93       	push	r24
 324:	0e 94 25 02 	call	0x44a	; 0x44a <printf>
		
		int Val = (nTimeInterval/16 -260) / 155;
		GenerateDiscrete(Val);
 328:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <nTimeInterval>
 32c:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <nTimeInterval+0x1>
 330:	99 23       	and	r25, r25
 332:	0c f4       	brge	.+2      	; 0x336 <__vector_10+0xe4>
 334:	0f 96       	adiw	r24, 0x0f	; 15
 336:	95 95       	asr	r25
 338:	87 95       	ror	r24
 33a:	95 95       	asr	r25
 33c:	87 95       	ror	r24
 33e:	95 95       	asr	r25
 340:	87 95       	ror	r24
 342:	95 95       	asr	r25
 344:	87 95       	ror	r24
 346:	84 50       	subi	r24, 0x04	; 4
 348:	91 40       	sbci	r25, 0x01	; 1
 34a:	6b e9       	ldi	r22, 0x9B	; 155
 34c:	70 e0       	ldi	r23, 0x00	; 0
 34e:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__divmodhi4>
 352:	cb 01       	movw	r24, r22
 354:	0e 94 90 00 	call	0x120	; 0x120 <GenerateDiscrete>
			GenerateDiscrete(Val);
		}
		*/
		
	
		printf("%d\n", OCR0A);
 358:	87 b5       	in	r24, 0x27	; 39
 35a:	1f 92       	push	r1
 35c:	8f 93       	push	r24
 35e:	80 e6       	ldi	r24, 0x60	; 96
 360:	91 e0       	ldi	r25, 0x01	; 1
 362:	9f 93       	push	r25
 364:	8f 93       	push	r24
 366:	0e 94 25 02 	call	0x44a	; 0x44a <printf>




		//printf("end icr1 %d \n", (int)ICR1);
		nTimeInterval = 0;
 36a:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <nTimeInterval+0x1>
 36e:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <nTimeInterval>
		nTimeStart = 0;
 372:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <__data_end+0x1>
 376:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <__data_end>
		nTimeEnd = 0;	
 37a:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <nTimeEnd+0x1>
 37e:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <nTimeEnd>
 382:	8d b7       	in	r24, 0x3d	; 61
 384:	9e b7       	in	r25, 0x3e	; 62
 386:	08 96       	adiw	r24, 0x08	; 8
 388:	0f b6       	in	r0, 0x3f	; 63
 38a:	f8 94       	cli
 38c:	9e bf       	out	0x3e, r25	; 62
 38e:	0f be       	out	0x3f, r0	; 63
 390:	8d bf       	out	0x3d, r24	; 61

	}

	bIsTriggered ^= true;
 392:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
 396:	81 e0       	ldi	r24, 0x01	; 1
 398:	89 27       	eor	r24, r25
 39a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>

}
 39e:	ff 91       	pop	r31
 3a0:	ef 91       	pop	r30
 3a2:	bf 91       	pop	r27
 3a4:	af 91       	pop	r26
 3a6:	9f 91       	pop	r25
 3a8:	8f 91       	pop	r24
 3aa:	7f 91       	pop	r23
 3ac:	6f 91       	pop	r22
 3ae:	5f 91       	pop	r21
 3b0:	4f 91       	pop	r20
 3b2:	3f 91       	pop	r19
 3b4:	2f 91       	pop	r18
 3b6:	0f 90       	pop	r0
 3b8:	0f be       	out	0x3f, r0	; 63
 3ba:	0f 90       	pop	r0
 3bc:	1f 90       	pop	r1
 3be:	18 95       	reti

000003c0 <__vector_13>:

ISR(TIMER1_OVF_vect){
 3c0:	1f 92       	push	r1
 3c2:	0f 92       	push	r0
 3c4:	0f b6       	in	r0, 0x3f	; 63
 3c6:	0f 92       	push	r0
 3c8:	11 24       	eor	r1, r1
 3ca:	8f 93       	push	r24
 3cc:	9f 93       	push	r25
	nLoopCount++;
 3ce:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <nLoopCount>
 3d2:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <nLoopCount+0x1>
 3d6:	01 96       	adiw	r24, 0x01	; 1
 3d8:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <nLoopCount+0x1>
 3dc:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <nLoopCount>

}
 3e0:	9f 91       	pop	r25
 3e2:	8f 91       	pop	r24
 3e4:	0f 90       	pop	r0
 3e6:	0f be       	out	0x3f, r0	; 63
 3e8:	0f 90       	pop	r0
 3ea:	1f 90       	pop	r1
 3ec:	18 95       	reti

000003ee <__divmodhi4>:
 3ee:	97 fb       	bst	r25, 7
 3f0:	07 2e       	mov	r0, r23
 3f2:	16 f4       	brtc	.+4      	; 0x3f8 <__divmodhi4+0xa>
 3f4:	00 94       	com	r0
 3f6:	07 d0       	rcall	.+14     	; 0x406 <__divmodhi4_neg1>
 3f8:	77 fd       	sbrc	r23, 7
 3fa:	09 d0       	rcall	.+18     	; 0x40e <__divmodhi4_neg2>
 3fc:	0e 94 11 02 	call	0x422	; 0x422 <__udivmodhi4>
 400:	07 fc       	sbrc	r0, 7
 402:	05 d0       	rcall	.+10     	; 0x40e <__divmodhi4_neg2>
 404:	3e f4       	brtc	.+14     	; 0x414 <__divmodhi4_exit>

00000406 <__divmodhi4_neg1>:
 406:	90 95       	com	r25
 408:	81 95       	neg	r24
 40a:	9f 4f       	sbci	r25, 0xFF	; 255
 40c:	08 95       	ret

0000040e <__divmodhi4_neg2>:
 40e:	70 95       	com	r23
 410:	61 95       	neg	r22
 412:	7f 4f       	sbci	r23, 0xFF	; 255

00000414 <__divmodhi4_exit>:
 414:	08 95       	ret

00000416 <__tablejump2__>:
 416:	ee 0f       	add	r30, r30
 418:	ff 1f       	adc	r31, r31
 41a:	05 90       	lpm	r0, Z+
 41c:	f4 91       	lpm	r31, Z
 41e:	e0 2d       	mov	r30, r0
 420:	09 94       	ijmp

00000422 <__udivmodhi4>:
 422:	aa 1b       	sub	r26, r26
 424:	bb 1b       	sub	r27, r27
 426:	51 e1       	ldi	r21, 0x11	; 17
 428:	07 c0       	rjmp	.+14     	; 0x438 <__udivmodhi4_ep>

0000042a <__udivmodhi4_loop>:
 42a:	aa 1f       	adc	r26, r26
 42c:	bb 1f       	adc	r27, r27
 42e:	a6 17       	cp	r26, r22
 430:	b7 07       	cpc	r27, r23
 432:	10 f0       	brcs	.+4      	; 0x438 <__udivmodhi4_ep>
 434:	a6 1b       	sub	r26, r22
 436:	b7 0b       	sbc	r27, r23

00000438 <__udivmodhi4_ep>:
 438:	88 1f       	adc	r24, r24
 43a:	99 1f       	adc	r25, r25
 43c:	5a 95       	dec	r21
 43e:	a9 f7       	brne	.-22     	; 0x42a <__udivmodhi4_loop>
 440:	80 95       	com	r24
 442:	90 95       	com	r25
 444:	bc 01       	movw	r22, r24
 446:	cd 01       	movw	r24, r26
 448:	08 95       	ret

0000044a <printf>:
 44a:	a0 e0       	ldi	r26, 0x00	; 0
 44c:	b0 e0       	ldi	r27, 0x00	; 0
 44e:	eb e2       	ldi	r30, 0x2B	; 43
 450:	f2 e0       	ldi	r31, 0x02	; 2
 452:	0c 94 0c 05 	jmp	0xa18	; 0xa18 <__prologue_saves__+0x20>
 456:	ae 01       	movw	r20, r28
 458:	4b 5f       	subi	r20, 0xFB	; 251
 45a:	5f 4f       	sbci	r21, 0xFF	; 255
 45c:	fa 01       	movw	r30, r20
 45e:	61 91       	ld	r22, Z+
 460:	71 91       	ld	r23, Z+
 462:	af 01       	movw	r20, r30
 464:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <__iob+0x2>
 468:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <__iob+0x3>
 46c:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <vfprintf>
 470:	e2 e0       	ldi	r30, 0x02	; 2
 472:	0c 94 28 05 	jmp	0xa50	; 0xa50 <__epilogue_restores__+0x20>

00000476 <puts>:
 476:	0f 93       	push	r16
 478:	1f 93       	push	r17
 47a:	cf 93       	push	r28
 47c:	df 93       	push	r29
 47e:	e0 91 8e 01 	lds	r30, 0x018E	; 0x80018e <__iob+0x2>
 482:	f0 91 8f 01 	lds	r31, 0x018F	; 0x80018f <__iob+0x3>
 486:	23 81       	ldd	r18, Z+3	; 0x03
 488:	21 ff       	sbrs	r18, 1
 48a:	1b c0       	rjmp	.+54     	; 0x4c2 <puts+0x4c>
 48c:	8c 01       	movw	r16, r24
 48e:	d0 e0       	ldi	r29, 0x00	; 0
 490:	c0 e0       	ldi	r28, 0x00	; 0
 492:	f8 01       	movw	r30, r16
 494:	81 91       	ld	r24, Z+
 496:	8f 01       	movw	r16, r30
 498:	60 91 8e 01 	lds	r22, 0x018E	; 0x80018e <__iob+0x2>
 49c:	70 91 8f 01 	lds	r23, 0x018F	; 0x80018f <__iob+0x3>
 4a0:	db 01       	movw	r26, r22
 4a2:	18 96       	adiw	r26, 0x08	; 8
 4a4:	ed 91       	ld	r30, X+
 4a6:	fc 91       	ld	r31, X
 4a8:	19 97       	sbiw	r26, 0x09	; 9
 4aa:	88 23       	and	r24, r24
 4ac:	31 f0       	breq	.+12     	; 0x4ba <puts+0x44>
 4ae:	09 95       	icall
 4b0:	89 2b       	or	r24, r25
 4b2:	79 f3       	breq	.-34     	; 0x492 <puts+0x1c>
 4b4:	df ef       	ldi	r29, 0xFF	; 255
 4b6:	cf ef       	ldi	r28, 0xFF	; 255
 4b8:	ec cf       	rjmp	.-40     	; 0x492 <puts+0x1c>
 4ba:	8a e0       	ldi	r24, 0x0A	; 10
 4bc:	09 95       	icall
 4be:	89 2b       	or	r24, r25
 4c0:	19 f0       	breq	.+6      	; 0x4c8 <puts+0x52>
 4c2:	8f ef       	ldi	r24, 0xFF	; 255
 4c4:	9f ef       	ldi	r25, 0xFF	; 255
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <puts+0x56>
 4c8:	8d 2f       	mov	r24, r29
 4ca:	9c 2f       	mov	r25, r28
 4cc:	df 91       	pop	r29
 4ce:	cf 91       	pop	r28
 4d0:	1f 91       	pop	r17
 4d2:	0f 91       	pop	r16
 4d4:	08 95       	ret

000004d6 <vfprintf>:
 4d6:	ab e0       	ldi	r26, 0x0B	; 11
 4d8:	b0 e0       	ldi	r27, 0x00	; 0
 4da:	e1 e7       	ldi	r30, 0x71	; 113
 4dc:	f2 e0       	ldi	r31, 0x02	; 2
 4de:	0c 94 fc 04 	jmp	0x9f8	; 0x9f8 <__prologue_saves__>
 4e2:	6c 01       	movw	r12, r24
 4e4:	7b 01       	movw	r14, r22
 4e6:	8a 01       	movw	r16, r20
 4e8:	fc 01       	movw	r30, r24
 4ea:	17 82       	std	Z+7, r1	; 0x07
 4ec:	16 82       	std	Z+6, r1	; 0x06
 4ee:	83 81       	ldd	r24, Z+3	; 0x03
 4f0:	81 ff       	sbrs	r24, 1
 4f2:	cc c1       	rjmp	.+920    	; 0x88c <vfprintf+0x3b6>
 4f4:	ce 01       	movw	r24, r28
 4f6:	01 96       	adiw	r24, 0x01	; 1
 4f8:	3c 01       	movw	r6, r24
 4fa:	f6 01       	movw	r30, r12
 4fc:	93 81       	ldd	r25, Z+3	; 0x03
 4fe:	f7 01       	movw	r30, r14
 500:	93 fd       	sbrc	r25, 3
 502:	85 91       	lpm	r24, Z+
 504:	93 ff       	sbrs	r25, 3
 506:	81 91       	ld	r24, Z+
 508:	7f 01       	movw	r14, r30
 50a:	88 23       	and	r24, r24
 50c:	09 f4       	brne	.+2      	; 0x510 <vfprintf+0x3a>
 50e:	ba c1       	rjmp	.+884    	; 0x884 <vfprintf+0x3ae>
 510:	85 32       	cpi	r24, 0x25	; 37
 512:	39 f4       	brne	.+14     	; 0x522 <vfprintf+0x4c>
 514:	93 fd       	sbrc	r25, 3
 516:	85 91       	lpm	r24, Z+
 518:	93 ff       	sbrs	r25, 3
 51a:	81 91       	ld	r24, Z+
 51c:	7f 01       	movw	r14, r30
 51e:	85 32       	cpi	r24, 0x25	; 37
 520:	29 f4       	brne	.+10     	; 0x52c <vfprintf+0x56>
 522:	b6 01       	movw	r22, r12
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	0e 94 62 04 	call	0x8c4	; 0x8c4 <fputc>
 52a:	e7 cf       	rjmp	.-50     	; 0x4fa <vfprintf+0x24>
 52c:	91 2c       	mov	r9, r1
 52e:	21 2c       	mov	r2, r1
 530:	31 2c       	mov	r3, r1
 532:	ff e1       	ldi	r31, 0x1F	; 31
 534:	f3 15       	cp	r31, r3
 536:	d8 f0       	brcs	.+54     	; 0x56e <vfprintf+0x98>
 538:	8b 32       	cpi	r24, 0x2B	; 43
 53a:	79 f0       	breq	.+30     	; 0x55a <vfprintf+0x84>
 53c:	38 f4       	brcc	.+14     	; 0x54c <vfprintf+0x76>
 53e:	80 32       	cpi	r24, 0x20	; 32
 540:	79 f0       	breq	.+30     	; 0x560 <vfprintf+0x8a>
 542:	83 32       	cpi	r24, 0x23	; 35
 544:	a1 f4       	brne	.+40     	; 0x56e <vfprintf+0x98>
 546:	23 2d       	mov	r18, r3
 548:	20 61       	ori	r18, 0x10	; 16
 54a:	1d c0       	rjmp	.+58     	; 0x586 <vfprintf+0xb0>
 54c:	8d 32       	cpi	r24, 0x2D	; 45
 54e:	61 f0       	breq	.+24     	; 0x568 <vfprintf+0x92>
 550:	80 33       	cpi	r24, 0x30	; 48
 552:	69 f4       	brne	.+26     	; 0x56e <vfprintf+0x98>
 554:	23 2d       	mov	r18, r3
 556:	21 60       	ori	r18, 0x01	; 1
 558:	16 c0       	rjmp	.+44     	; 0x586 <vfprintf+0xb0>
 55a:	83 2d       	mov	r24, r3
 55c:	82 60       	ori	r24, 0x02	; 2
 55e:	38 2e       	mov	r3, r24
 560:	e3 2d       	mov	r30, r3
 562:	e4 60       	ori	r30, 0x04	; 4
 564:	3e 2e       	mov	r3, r30
 566:	2a c0       	rjmp	.+84     	; 0x5bc <vfprintf+0xe6>
 568:	f3 2d       	mov	r31, r3
 56a:	f8 60       	ori	r31, 0x08	; 8
 56c:	1d c0       	rjmp	.+58     	; 0x5a8 <vfprintf+0xd2>
 56e:	37 fc       	sbrc	r3, 7
 570:	2d c0       	rjmp	.+90     	; 0x5cc <vfprintf+0xf6>
 572:	20 ed       	ldi	r18, 0xD0	; 208
 574:	28 0f       	add	r18, r24
 576:	2a 30       	cpi	r18, 0x0A	; 10
 578:	40 f0       	brcs	.+16     	; 0x58a <vfprintf+0xb4>
 57a:	8e 32       	cpi	r24, 0x2E	; 46
 57c:	b9 f4       	brne	.+46     	; 0x5ac <vfprintf+0xd6>
 57e:	36 fc       	sbrc	r3, 6
 580:	81 c1       	rjmp	.+770    	; 0x884 <vfprintf+0x3ae>
 582:	23 2d       	mov	r18, r3
 584:	20 64       	ori	r18, 0x40	; 64
 586:	32 2e       	mov	r3, r18
 588:	19 c0       	rjmp	.+50     	; 0x5bc <vfprintf+0xe6>
 58a:	36 fe       	sbrs	r3, 6
 58c:	06 c0       	rjmp	.+12     	; 0x59a <vfprintf+0xc4>
 58e:	8a e0       	ldi	r24, 0x0A	; 10
 590:	98 9e       	mul	r9, r24
 592:	20 0d       	add	r18, r0
 594:	11 24       	eor	r1, r1
 596:	92 2e       	mov	r9, r18
 598:	11 c0       	rjmp	.+34     	; 0x5bc <vfprintf+0xe6>
 59a:	ea e0       	ldi	r30, 0x0A	; 10
 59c:	2e 9e       	mul	r2, r30
 59e:	20 0d       	add	r18, r0
 5a0:	11 24       	eor	r1, r1
 5a2:	22 2e       	mov	r2, r18
 5a4:	f3 2d       	mov	r31, r3
 5a6:	f0 62       	ori	r31, 0x20	; 32
 5a8:	3f 2e       	mov	r3, r31
 5aa:	08 c0       	rjmp	.+16     	; 0x5bc <vfprintf+0xe6>
 5ac:	8c 36       	cpi	r24, 0x6C	; 108
 5ae:	21 f4       	brne	.+8      	; 0x5b8 <vfprintf+0xe2>
 5b0:	83 2d       	mov	r24, r3
 5b2:	80 68       	ori	r24, 0x80	; 128
 5b4:	38 2e       	mov	r3, r24
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <vfprintf+0xe6>
 5b8:	88 36       	cpi	r24, 0x68	; 104
 5ba:	41 f4       	brne	.+16     	; 0x5cc <vfprintf+0xf6>
 5bc:	f7 01       	movw	r30, r14
 5be:	93 fd       	sbrc	r25, 3
 5c0:	85 91       	lpm	r24, Z+
 5c2:	93 ff       	sbrs	r25, 3
 5c4:	81 91       	ld	r24, Z+
 5c6:	7f 01       	movw	r14, r30
 5c8:	81 11       	cpse	r24, r1
 5ca:	b3 cf       	rjmp	.-154    	; 0x532 <vfprintf+0x5c>
 5cc:	98 2f       	mov	r25, r24
 5ce:	9f 7d       	andi	r25, 0xDF	; 223
 5d0:	95 54       	subi	r25, 0x45	; 69
 5d2:	93 30       	cpi	r25, 0x03	; 3
 5d4:	28 f4       	brcc	.+10     	; 0x5e0 <vfprintf+0x10a>
 5d6:	0c 5f       	subi	r16, 0xFC	; 252
 5d8:	1f 4f       	sbci	r17, 0xFF	; 255
 5da:	9f e3       	ldi	r25, 0x3F	; 63
 5dc:	99 83       	std	Y+1, r25	; 0x01
 5de:	0d c0       	rjmp	.+26     	; 0x5fa <vfprintf+0x124>
 5e0:	83 36       	cpi	r24, 0x63	; 99
 5e2:	31 f0       	breq	.+12     	; 0x5f0 <vfprintf+0x11a>
 5e4:	83 37       	cpi	r24, 0x73	; 115
 5e6:	71 f0       	breq	.+28     	; 0x604 <vfprintf+0x12e>
 5e8:	83 35       	cpi	r24, 0x53	; 83
 5ea:	09 f0       	breq	.+2      	; 0x5ee <vfprintf+0x118>
 5ec:	59 c0       	rjmp	.+178    	; 0x6a0 <vfprintf+0x1ca>
 5ee:	21 c0       	rjmp	.+66     	; 0x632 <vfprintf+0x15c>
 5f0:	f8 01       	movw	r30, r16
 5f2:	80 81       	ld	r24, Z
 5f4:	89 83       	std	Y+1, r24	; 0x01
 5f6:	0e 5f       	subi	r16, 0xFE	; 254
 5f8:	1f 4f       	sbci	r17, 0xFF	; 255
 5fa:	88 24       	eor	r8, r8
 5fc:	83 94       	inc	r8
 5fe:	91 2c       	mov	r9, r1
 600:	53 01       	movw	r10, r6
 602:	13 c0       	rjmp	.+38     	; 0x62a <vfprintf+0x154>
 604:	28 01       	movw	r4, r16
 606:	f2 e0       	ldi	r31, 0x02	; 2
 608:	4f 0e       	add	r4, r31
 60a:	51 1c       	adc	r5, r1
 60c:	f8 01       	movw	r30, r16
 60e:	a0 80       	ld	r10, Z
 610:	b1 80       	ldd	r11, Z+1	; 0x01
 612:	36 fe       	sbrs	r3, 6
 614:	03 c0       	rjmp	.+6      	; 0x61c <vfprintf+0x146>
 616:	69 2d       	mov	r22, r9
 618:	70 e0       	ldi	r23, 0x00	; 0
 61a:	02 c0       	rjmp	.+4      	; 0x620 <vfprintf+0x14a>
 61c:	6f ef       	ldi	r22, 0xFF	; 255
 61e:	7f ef       	ldi	r23, 0xFF	; 255
 620:	c5 01       	movw	r24, r10
 622:	0e 94 57 04 	call	0x8ae	; 0x8ae <strnlen>
 626:	4c 01       	movw	r8, r24
 628:	82 01       	movw	r16, r4
 62a:	f3 2d       	mov	r31, r3
 62c:	ff 77       	andi	r31, 0x7F	; 127
 62e:	3f 2e       	mov	r3, r31
 630:	16 c0       	rjmp	.+44     	; 0x65e <vfprintf+0x188>
 632:	28 01       	movw	r4, r16
 634:	22 e0       	ldi	r18, 0x02	; 2
 636:	42 0e       	add	r4, r18
 638:	51 1c       	adc	r5, r1
 63a:	f8 01       	movw	r30, r16
 63c:	a0 80       	ld	r10, Z
 63e:	b1 80       	ldd	r11, Z+1	; 0x01
 640:	36 fe       	sbrs	r3, 6
 642:	03 c0       	rjmp	.+6      	; 0x64a <vfprintf+0x174>
 644:	69 2d       	mov	r22, r9
 646:	70 e0       	ldi	r23, 0x00	; 0
 648:	02 c0       	rjmp	.+4      	; 0x64e <vfprintf+0x178>
 64a:	6f ef       	ldi	r22, 0xFF	; 255
 64c:	7f ef       	ldi	r23, 0xFF	; 255
 64e:	c5 01       	movw	r24, r10
 650:	0e 94 4c 04 	call	0x898	; 0x898 <strnlen_P>
 654:	4c 01       	movw	r8, r24
 656:	f3 2d       	mov	r31, r3
 658:	f0 68       	ori	r31, 0x80	; 128
 65a:	3f 2e       	mov	r3, r31
 65c:	82 01       	movw	r16, r4
 65e:	33 fc       	sbrc	r3, 3
 660:	1b c0       	rjmp	.+54     	; 0x698 <vfprintf+0x1c2>
 662:	82 2d       	mov	r24, r2
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	88 16       	cp	r8, r24
 668:	99 06       	cpc	r9, r25
 66a:	b0 f4       	brcc	.+44     	; 0x698 <vfprintf+0x1c2>
 66c:	b6 01       	movw	r22, r12
 66e:	80 e2       	ldi	r24, 0x20	; 32
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	0e 94 62 04 	call	0x8c4	; 0x8c4 <fputc>
 676:	2a 94       	dec	r2
 678:	f4 cf       	rjmp	.-24     	; 0x662 <vfprintf+0x18c>
 67a:	f5 01       	movw	r30, r10
 67c:	37 fc       	sbrc	r3, 7
 67e:	85 91       	lpm	r24, Z+
 680:	37 fe       	sbrs	r3, 7
 682:	81 91       	ld	r24, Z+
 684:	5f 01       	movw	r10, r30
 686:	b6 01       	movw	r22, r12
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	0e 94 62 04 	call	0x8c4	; 0x8c4 <fputc>
 68e:	21 10       	cpse	r2, r1
 690:	2a 94       	dec	r2
 692:	21 e0       	ldi	r18, 0x01	; 1
 694:	82 1a       	sub	r8, r18
 696:	91 08       	sbc	r9, r1
 698:	81 14       	cp	r8, r1
 69a:	91 04       	cpc	r9, r1
 69c:	71 f7       	brne	.-36     	; 0x67a <vfprintf+0x1a4>
 69e:	e8 c0       	rjmp	.+464    	; 0x870 <vfprintf+0x39a>
 6a0:	84 36       	cpi	r24, 0x64	; 100
 6a2:	11 f0       	breq	.+4      	; 0x6a8 <vfprintf+0x1d2>
 6a4:	89 36       	cpi	r24, 0x69	; 105
 6a6:	41 f5       	brne	.+80     	; 0x6f8 <vfprintf+0x222>
 6a8:	f8 01       	movw	r30, r16
 6aa:	37 fe       	sbrs	r3, 7
 6ac:	07 c0       	rjmp	.+14     	; 0x6bc <vfprintf+0x1e6>
 6ae:	60 81       	ld	r22, Z
 6b0:	71 81       	ldd	r23, Z+1	; 0x01
 6b2:	82 81       	ldd	r24, Z+2	; 0x02
 6b4:	93 81       	ldd	r25, Z+3	; 0x03
 6b6:	0c 5f       	subi	r16, 0xFC	; 252
 6b8:	1f 4f       	sbci	r17, 0xFF	; 255
 6ba:	08 c0       	rjmp	.+16     	; 0x6cc <vfprintf+0x1f6>
 6bc:	60 81       	ld	r22, Z
 6be:	71 81       	ldd	r23, Z+1	; 0x01
 6c0:	07 2e       	mov	r0, r23
 6c2:	00 0c       	add	r0, r0
 6c4:	88 0b       	sbc	r24, r24
 6c6:	99 0b       	sbc	r25, r25
 6c8:	0e 5f       	subi	r16, 0xFE	; 254
 6ca:	1f 4f       	sbci	r17, 0xFF	; 255
 6cc:	f3 2d       	mov	r31, r3
 6ce:	ff 76       	andi	r31, 0x6F	; 111
 6d0:	3f 2e       	mov	r3, r31
 6d2:	97 ff       	sbrs	r25, 7
 6d4:	09 c0       	rjmp	.+18     	; 0x6e8 <vfprintf+0x212>
 6d6:	90 95       	com	r25
 6d8:	80 95       	com	r24
 6da:	70 95       	com	r23
 6dc:	61 95       	neg	r22
 6de:	7f 4f       	sbci	r23, 0xFF	; 255
 6e0:	8f 4f       	sbci	r24, 0xFF	; 255
 6e2:	9f 4f       	sbci	r25, 0xFF	; 255
 6e4:	f0 68       	ori	r31, 0x80	; 128
 6e6:	3f 2e       	mov	r3, r31
 6e8:	2a e0       	ldi	r18, 0x0A	; 10
 6ea:	30 e0       	ldi	r19, 0x00	; 0
 6ec:	a3 01       	movw	r20, r6
 6ee:	0e 94 9e 04 	call	0x93c	; 0x93c <__ultoa_invert>
 6f2:	88 2e       	mov	r8, r24
 6f4:	86 18       	sub	r8, r6
 6f6:	45 c0       	rjmp	.+138    	; 0x782 <vfprintf+0x2ac>
 6f8:	85 37       	cpi	r24, 0x75	; 117
 6fa:	31 f4       	brne	.+12     	; 0x708 <vfprintf+0x232>
 6fc:	23 2d       	mov	r18, r3
 6fe:	2f 7e       	andi	r18, 0xEF	; 239
 700:	b2 2e       	mov	r11, r18
 702:	2a e0       	ldi	r18, 0x0A	; 10
 704:	30 e0       	ldi	r19, 0x00	; 0
 706:	25 c0       	rjmp	.+74     	; 0x752 <vfprintf+0x27c>
 708:	93 2d       	mov	r25, r3
 70a:	99 7f       	andi	r25, 0xF9	; 249
 70c:	b9 2e       	mov	r11, r25
 70e:	8f 36       	cpi	r24, 0x6F	; 111
 710:	c1 f0       	breq	.+48     	; 0x742 <vfprintf+0x26c>
 712:	18 f4       	brcc	.+6      	; 0x71a <vfprintf+0x244>
 714:	88 35       	cpi	r24, 0x58	; 88
 716:	79 f0       	breq	.+30     	; 0x736 <vfprintf+0x260>
 718:	b5 c0       	rjmp	.+362    	; 0x884 <vfprintf+0x3ae>
 71a:	80 37       	cpi	r24, 0x70	; 112
 71c:	19 f0       	breq	.+6      	; 0x724 <vfprintf+0x24e>
 71e:	88 37       	cpi	r24, 0x78	; 120
 720:	21 f0       	breq	.+8      	; 0x72a <vfprintf+0x254>
 722:	b0 c0       	rjmp	.+352    	; 0x884 <vfprintf+0x3ae>
 724:	e9 2f       	mov	r30, r25
 726:	e0 61       	ori	r30, 0x10	; 16
 728:	be 2e       	mov	r11, r30
 72a:	b4 fe       	sbrs	r11, 4
 72c:	0d c0       	rjmp	.+26     	; 0x748 <vfprintf+0x272>
 72e:	fb 2d       	mov	r31, r11
 730:	f4 60       	ori	r31, 0x04	; 4
 732:	bf 2e       	mov	r11, r31
 734:	09 c0       	rjmp	.+18     	; 0x748 <vfprintf+0x272>
 736:	34 fe       	sbrs	r3, 4
 738:	0a c0       	rjmp	.+20     	; 0x74e <vfprintf+0x278>
 73a:	29 2f       	mov	r18, r25
 73c:	26 60       	ori	r18, 0x06	; 6
 73e:	b2 2e       	mov	r11, r18
 740:	06 c0       	rjmp	.+12     	; 0x74e <vfprintf+0x278>
 742:	28 e0       	ldi	r18, 0x08	; 8
 744:	30 e0       	ldi	r19, 0x00	; 0
 746:	05 c0       	rjmp	.+10     	; 0x752 <vfprintf+0x27c>
 748:	20 e1       	ldi	r18, 0x10	; 16
 74a:	30 e0       	ldi	r19, 0x00	; 0
 74c:	02 c0       	rjmp	.+4      	; 0x752 <vfprintf+0x27c>
 74e:	20 e1       	ldi	r18, 0x10	; 16
 750:	32 e0       	ldi	r19, 0x02	; 2
 752:	f8 01       	movw	r30, r16
 754:	b7 fe       	sbrs	r11, 7
 756:	07 c0       	rjmp	.+14     	; 0x766 <vfprintf+0x290>
 758:	60 81       	ld	r22, Z
 75a:	71 81       	ldd	r23, Z+1	; 0x01
 75c:	82 81       	ldd	r24, Z+2	; 0x02
 75e:	93 81       	ldd	r25, Z+3	; 0x03
 760:	0c 5f       	subi	r16, 0xFC	; 252
 762:	1f 4f       	sbci	r17, 0xFF	; 255
 764:	06 c0       	rjmp	.+12     	; 0x772 <vfprintf+0x29c>
 766:	60 81       	ld	r22, Z
 768:	71 81       	ldd	r23, Z+1	; 0x01
 76a:	80 e0       	ldi	r24, 0x00	; 0
 76c:	90 e0       	ldi	r25, 0x00	; 0
 76e:	0e 5f       	subi	r16, 0xFE	; 254
 770:	1f 4f       	sbci	r17, 0xFF	; 255
 772:	a3 01       	movw	r20, r6
 774:	0e 94 9e 04 	call	0x93c	; 0x93c <__ultoa_invert>
 778:	88 2e       	mov	r8, r24
 77a:	86 18       	sub	r8, r6
 77c:	fb 2d       	mov	r31, r11
 77e:	ff 77       	andi	r31, 0x7F	; 127
 780:	3f 2e       	mov	r3, r31
 782:	36 fe       	sbrs	r3, 6
 784:	0d c0       	rjmp	.+26     	; 0x7a0 <vfprintf+0x2ca>
 786:	23 2d       	mov	r18, r3
 788:	2e 7f       	andi	r18, 0xFE	; 254
 78a:	a2 2e       	mov	r10, r18
 78c:	89 14       	cp	r8, r9
 78e:	58 f4       	brcc	.+22     	; 0x7a6 <vfprintf+0x2d0>
 790:	34 fe       	sbrs	r3, 4
 792:	0b c0       	rjmp	.+22     	; 0x7aa <vfprintf+0x2d4>
 794:	32 fc       	sbrc	r3, 2
 796:	09 c0       	rjmp	.+18     	; 0x7aa <vfprintf+0x2d4>
 798:	83 2d       	mov	r24, r3
 79a:	8e 7e       	andi	r24, 0xEE	; 238
 79c:	a8 2e       	mov	r10, r24
 79e:	05 c0       	rjmp	.+10     	; 0x7aa <vfprintf+0x2d4>
 7a0:	b8 2c       	mov	r11, r8
 7a2:	a3 2c       	mov	r10, r3
 7a4:	03 c0       	rjmp	.+6      	; 0x7ac <vfprintf+0x2d6>
 7a6:	b8 2c       	mov	r11, r8
 7a8:	01 c0       	rjmp	.+2      	; 0x7ac <vfprintf+0x2d6>
 7aa:	b9 2c       	mov	r11, r9
 7ac:	a4 fe       	sbrs	r10, 4
 7ae:	0f c0       	rjmp	.+30     	; 0x7ce <vfprintf+0x2f8>
 7b0:	fe 01       	movw	r30, r28
 7b2:	e8 0d       	add	r30, r8
 7b4:	f1 1d       	adc	r31, r1
 7b6:	80 81       	ld	r24, Z
 7b8:	80 33       	cpi	r24, 0x30	; 48
 7ba:	21 f4       	brne	.+8      	; 0x7c4 <vfprintf+0x2ee>
 7bc:	9a 2d       	mov	r25, r10
 7be:	99 7e       	andi	r25, 0xE9	; 233
 7c0:	a9 2e       	mov	r10, r25
 7c2:	09 c0       	rjmp	.+18     	; 0x7d6 <vfprintf+0x300>
 7c4:	a2 fe       	sbrs	r10, 2
 7c6:	06 c0       	rjmp	.+12     	; 0x7d4 <vfprintf+0x2fe>
 7c8:	b3 94       	inc	r11
 7ca:	b3 94       	inc	r11
 7cc:	04 c0       	rjmp	.+8      	; 0x7d6 <vfprintf+0x300>
 7ce:	8a 2d       	mov	r24, r10
 7d0:	86 78       	andi	r24, 0x86	; 134
 7d2:	09 f0       	breq	.+2      	; 0x7d6 <vfprintf+0x300>
 7d4:	b3 94       	inc	r11
 7d6:	a3 fc       	sbrc	r10, 3
 7d8:	11 c0       	rjmp	.+34     	; 0x7fc <vfprintf+0x326>
 7da:	a0 fe       	sbrs	r10, 0
 7dc:	06 c0       	rjmp	.+12     	; 0x7ea <vfprintf+0x314>
 7de:	b2 14       	cp	r11, r2
 7e0:	88 f4       	brcc	.+34     	; 0x804 <vfprintf+0x32e>
 7e2:	28 0c       	add	r2, r8
 7e4:	92 2c       	mov	r9, r2
 7e6:	9b 18       	sub	r9, r11
 7e8:	0e c0       	rjmp	.+28     	; 0x806 <vfprintf+0x330>
 7ea:	b2 14       	cp	r11, r2
 7ec:	60 f4       	brcc	.+24     	; 0x806 <vfprintf+0x330>
 7ee:	b6 01       	movw	r22, r12
 7f0:	80 e2       	ldi	r24, 0x20	; 32
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	0e 94 62 04 	call	0x8c4	; 0x8c4 <fputc>
 7f8:	b3 94       	inc	r11
 7fa:	f7 cf       	rjmp	.-18     	; 0x7ea <vfprintf+0x314>
 7fc:	b2 14       	cp	r11, r2
 7fe:	18 f4       	brcc	.+6      	; 0x806 <vfprintf+0x330>
 800:	2b 18       	sub	r2, r11
 802:	02 c0       	rjmp	.+4      	; 0x808 <vfprintf+0x332>
 804:	98 2c       	mov	r9, r8
 806:	21 2c       	mov	r2, r1
 808:	a4 fe       	sbrs	r10, 4
 80a:	10 c0       	rjmp	.+32     	; 0x82c <vfprintf+0x356>
 80c:	b6 01       	movw	r22, r12
 80e:	80 e3       	ldi	r24, 0x30	; 48
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	0e 94 62 04 	call	0x8c4	; 0x8c4 <fputc>
 816:	a2 fe       	sbrs	r10, 2
 818:	17 c0       	rjmp	.+46     	; 0x848 <vfprintf+0x372>
 81a:	a1 fc       	sbrc	r10, 1
 81c:	03 c0       	rjmp	.+6      	; 0x824 <vfprintf+0x34e>
 81e:	88 e7       	ldi	r24, 0x78	; 120
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	02 c0       	rjmp	.+4      	; 0x828 <vfprintf+0x352>
 824:	88 e5       	ldi	r24, 0x58	; 88
 826:	90 e0       	ldi	r25, 0x00	; 0
 828:	b6 01       	movw	r22, r12
 82a:	0c c0       	rjmp	.+24     	; 0x844 <vfprintf+0x36e>
 82c:	8a 2d       	mov	r24, r10
 82e:	86 78       	andi	r24, 0x86	; 134
 830:	59 f0       	breq	.+22     	; 0x848 <vfprintf+0x372>
 832:	a1 fe       	sbrs	r10, 1
 834:	02 c0       	rjmp	.+4      	; 0x83a <vfprintf+0x364>
 836:	8b e2       	ldi	r24, 0x2B	; 43
 838:	01 c0       	rjmp	.+2      	; 0x83c <vfprintf+0x366>
 83a:	80 e2       	ldi	r24, 0x20	; 32
 83c:	a7 fc       	sbrc	r10, 7
 83e:	8d e2       	ldi	r24, 0x2D	; 45
 840:	b6 01       	movw	r22, r12
 842:	90 e0       	ldi	r25, 0x00	; 0
 844:	0e 94 62 04 	call	0x8c4	; 0x8c4 <fputc>
 848:	89 14       	cp	r8, r9
 84a:	38 f4       	brcc	.+14     	; 0x85a <vfprintf+0x384>
 84c:	b6 01       	movw	r22, r12
 84e:	80 e3       	ldi	r24, 0x30	; 48
 850:	90 e0       	ldi	r25, 0x00	; 0
 852:	0e 94 62 04 	call	0x8c4	; 0x8c4 <fputc>
 856:	9a 94       	dec	r9
 858:	f7 cf       	rjmp	.-18     	; 0x848 <vfprintf+0x372>
 85a:	8a 94       	dec	r8
 85c:	f3 01       	movw	r30, r6
 85e:	e8 0d       	add	r30, r8
 860:	f1 1d       	adc	r31, r1
 862:	80 81       	ld	r24, Z
 864:	b6 01       	movw	r22, r12
 866:	90 e0       	ldi	r25, 0x00	; 0
 868:	0e 94 62 04 	call	0x8c4	; 0x8c4 <fputc>
 86c:	81 10       	cpse	r8, r1
 86e:	f5 cf       	rjmp	.-22     	; 0x85a <vfprintf+0x384>
 870:	22 20       	and	r2, r2
 872:	09 f4       	brne	.+2      	; 0x876 <vfprintf+0x3a0>
 874:	42 ce       	rjmp	.-892    	; 0x4fa <vfprintf+0x24>
 876:	b6 01       	movw	r22, r12
 878:	80 e2       	ldi	r24, 0x20	; 32
 87a:	90 e0       	ldi	r25, 0x00	; 0
 87c:	0e 94 62 04 	call	0x8c4	; 0x8c4 <fputc>
 880:	2a 94       	dec	r2
 882:	f6 cf       	rjmp	.-20     	; 0x870 <vfprintf+0x39a>
 884:	f6 01       	movw	r30, r12
 886:	86 81       	ldd	r24, Z+6	; 0x06
 888:	97 81       	ldd	r25, Z+7	; 0x07
 88a:	02 c0       	rjmp	.+4      	; 0x890 <vfprintf+0x3ba>
 88c:	8f ef       	ldi	r24, 0xFF	; 255
 88e:	9f ef       	ldi	r25, 0xFF	; 255
 890:	2b 96       	adiw	r28, 0x0b	; 11
 892:	e2 e1       	ldi	r30, 0x12	; 18
 894:	0c 94 18 05 	jmp	0xa30	; 0xa30 <__epilogue_restores__>

00000898 <strnlen_P>:
 898:	fc 01       	movw	r30, r24
 89a:	05 90       	lpm	r0, Z+
 89c:	61 50       	subi	r22, 0x01	; 1
 89e:	70 40       	sbci	r23, 0x00	; 0
 8a0:	01 10       	cpse	r0, r1
 8a2:	d8 f7       	brcc	.-10     	; 0x89a <strnlen_P+0x2>
 8a4:	80 95       	com	r24
 8a6:	90 95       	com	r25
 8a8:	8e 0f       	add	r24, r30
 8aa:	9f 1f       	adc	r25, r31
 8ac:	08 95       	ret

000008ae <strnlen>:
 8ae:	fc 01       	movw	r30, r24
 8b0:	61 50       	subi	r22, 0x01	; 1
 8b2:	70 40       	sbci	r23, 0x00	; 0
 8b4:	01 90       	ld	r0, Z+
 8b6:	01 10       	cpse	r0, r1
 8b8:	d8 f7       	brcc	.-10     	; 0x8b0 <strnlen+0x2>
 8ba:	80 95       	com	r24
 8bc:	90 95       	com	r25
 8be:	8e 0f       	add	r24, r30
 8c0:	9f 1f       	adc	r25, r31
 8c2:	08 95       	ret

000008c4 <fputc>:
 8c4:	0f 93       	push	r16
 8c6:	1f 93       	push	r17
 8c8:	cf 93       	push	r28
 8ca:	df 93       	push	r29
 8cc:	fb 01       	movw	r30, r22
 8ce:	23 81       	ldd	r18, Z+3	; 0x03
 8d0:	21 fd       	sbrc	r18, 1
 8d2:	03 c0       	rjmp	.+6      	; 0x8da <fputc+0x16>
 8d4:	8f ef       	ldi	r24, 0xFF	; 255
 8d6:	9f ef       	ldi	r25, 0xFF	; 255
 8d8:	2c c0       	rjmp	.+88     	; 0x932 <__stack+0x33>
 8da:	22 ff       	sbrs	r18, 2
 8dc:	16 c0       	rjmp	.+44     	; 0x90a <__stack+0xb>
 8de:	46 81       	ldd	r20, Z+6	; 0x06
 8e0:	57 81       	ldd	r21, Z+7	; 0x07
 8e2:	24 81       	ldd	r18, Z+4	; 0x04
 8e4:	35 81       	ldd	r19, Z+5	; 0x05
 8e6:	42 17       	cp	r20, r18
 8e8:	53 07       	cpc	r21, r19
 8ea:	44 f4       	brge	.+16     	; 0x8fc <fputc+0x38>
 8ec:	a0 81       	ld	r26, Z
 8ee:	b1 81       	ldd	r27, Z+1	; 0x01
 8f0:	9d 01       	movw	r18, r26
 8f2:	2f 5f       	subi	r18, 0xFF	; 255
 8f4:	3f 4f       	sbci	r19, 0xFF	; 255
 8f6:	31 83       	std	Z+1, r19	; 0x01
 8f8:	20 83       	st	Z, r18
 8fa:	8c 93       	st	X, r24
 8fc:	26 81       	ldd	r18, Z+6	; 0x06
 8fe:	37 81       	ldd	r19, Z+7	; 0x07
 900:	2f 5f       	subi	r18, 0xFF	; 255
 902:	3f 4f       	sbci	r19, 0xFF	; 255
 904:	37 83       	std	Z+7, r19	; 0x07
 906:	26 83       	std	Z+6, r18	; 0x06
 908:	14 c0       	rjmp	.+40     	; 0x932 <__stack+0x33>
 90a:	8b 01       	movw	r16, r22
 90c:	ec 01       	movw	r28, r24
 90e:	fb 01       	movw	r30, r22
 910:	00 84       	ldd	r0, Z+8	; 0x08
 912:	f1 85       	ldd	r31, Z+9	; 0x09
 914:	e0 2d       	mov	r30, r0
 916:	09 95       	icall
 918:	89 2b       	or	r24, r25
 91a:	e1 f6       	brne	.-72     	; 0x8d4 <fputc+0x10>
 91c:	d8 01       	movw	r26, r16
 91e:	16 96       	adiw	r26, 0x06	; 6
 920:	8d 91       	ld	r24, X+
 922:	9c 91       	ld	r25, X
 924:	17 97       	sbiw	r26, 0x07	; 7
 926:	01 96       	adiw	r24, 0x01	; 1
 928:	17 96       	adiw	r26, 0x07	; 7
 92a:	9c 93       	st	X, r25
 92c:	8e 93       	st	-X, r24
 92e:	16 97       	sbiw	r26, 0x06	; 6
 930:	ce 01       	movw	r24, r28
 932:	df 91       	pop	r29
 934:	cf 91       	pop	r28
 936:	1f 91       	pop	r17
 938:	0f 91       	pop	r16
 93a:	08 95       	ret

0000093c <__ultoa_invert>:
 93c:	fa 01       	movw	r30, r20
 93e:	aa 27       	eor	r26, r26
 940:	28 30       	cpi	r18, 0x08	; 8
 942:	51 f1       	breq	.+84     	; 0x998 <__ultoa_invert+0x5c>
 944:	20 31       	cpi	r18, 0x10	; 16
 946:	81 f1       	breq	.+96     	; 0x9a8 <__ultoa_invert+0x6c>
 948:	e8 94       	clt
 94a:	6f 93       	push	r22
 94c:	6e 7f       	andi	r22, 0xFE	; 254
 94e:	6e 5f       	subi	r22, 0xFE	; 254
 950:	7f 4f       	sbci	r23, 0xFF	; 255
 952:	8f 4f       	sbci	r24, 0xFF	; 255
 954:	9f 4f       	sbci	r25, 0xFF	; 255
 956:	af 4f       	sbci	r26, 0xFF	; 255
 958:	b1 e0       	ldi	r27, 0x01	; 1
 95a:	3e d0       	rcall	.+124    	; 0x9d8 <__ultoa_invert+0x9c>
 95c:	b4 e0       	ldi	r27, 0x04	; 4
 95e:	3c d0       	rcall	.+120    	; 0x9d8 <__ultoa_invert+0x9c>
 960:	67 0f       	add	r22, r23
 962:	78 1f       	adc	r23, r24
 964:	89 1f       	adc	r24, r25
 966:	9a 1f       	adc	r25, r26
 968:	a1 1d       	adc	r26, r1
 96a:	68 0f       	add	r22, r24
 96c:	79 1f       	adc	r23, r25
 96e:	8a 1f       	adc	r24, r26
 970:	91 1d       	adc	r25, r1
 972:	a1 1d       	adc	r26, r1
 974:	6a 0f       	add	r22, r26
 976:	71 1d       	adc	r23, r1
 978:	81 1d       	adc	r24, r1
 97a:	91 1d       	adc	r25, r1
 97c:	a1 1d       	adc	r26, r1
 97e:	20 d0       	rcall	.+64     	; 0x9c0 <__ultoa_invert+0x84>
 980:	09 f4       	brne	.+2      	; 0x984 <__ultoa_invert+0x48>
 982:	68 94       	set
 984:	3f 91       	pop	r19
 986:	2a e0       	ldi	r18, 0x0A	; 10
 988:	26 9f       	mul	r18, r22
 98a:	11 24       	eor	r1, r1
 98c:	30 19       	sub	r19, r0
 98e:	30 5d       	subi	r19, 0xD0	; 208
 990:	31 93       	st	Z+, r19
 992:	de f6       	brtc	.-74     	; 0x94a <__ultoa_invert+0xe>
 994:	cf 01       	movw	r24, r30
 996:	08 95       	ret
 998:	46 2f       	mov	r20, r22
 99a:	47 70       	andi	r20, 0x07	; 7
 99c:	40 5d       	subi	r20, 0xD0	; 208
 99e:	41 93       	st	Z+, r20
 9a0:	b3 e0       	ldi	r27, 0x03	; 3
 9a2:	0f d0       	rcall	.+30     	; 0x9c2 <__ultoa_invert+0x86>
 9a4:	c9 f7       	brne	.-14     	; 0x998 <__ultoa_invert+0x5c>
 9a6:	f6 cf       	rjmp	.-20     	; 0x994 <__ultoa_invert+0x58>
 9a8:	46 2f       	mov	r20, r22
 9aa:	4f 70       	andi	r20, 0x0F	; 15
 9ac:	40 5d       	subi	r20, 0xD0	; 208
 9ae:	4a 33       	cpi	r20, 0x3A	; 58
 9b0:	18 f0       	brcs	.+6      	; 0x9b8 <__ultoa_invert+0x7c>
 9b2:	49 5d       	subi	r20, 0xD9	; 217
 9b4:	31 fd       	sbrc	r19, 1
 9b6:	40 52       	subi	r20, 0x20	; 32
 9b8:	41 93       	st	Z+, r20
 9ba:	02 d0       	rcall	.+4      	; 0x9c0 <__ultoa_invert+0x84>
 9bc:	a9 f7       	brne	.-22     	; 0x9a8 <__ultoa_invert+0x6c>
 9be:	ea cf       	rjmp	.-44     	; 0x994 <__ultoa_invert+0x58>
 9c0:	b4 e0       	ldi	r27, 0x04	; 4
 9c2:	a6 95       	lsr	r26
 9c4:	97 95       	ror	r25
 9c6:	87 95       	ror	r24
 9c8:	77 95       	ror	r23
 9ca:	67 95       	ror	r22
 9cc:	ba 95       	dec	r27
 9ce:	c9 f7       	brne	.-14     	; 0x9c2 <__ultoa_invert+0x86>
 9d0:	00 97       	sbiw	r24, 0x00	; 0
 9d2:	61 05       	cpc	r22, r1
 9d4:	71 05       	cpc	r23, r1
 9d6:	08 95       	ret
 9d8:	9b 01       	movw	r18, r22
 9da:	ac 01       	movw	r20, r24
 9dc:	0a 2e       	mov	r0, r26
 9de:	06 94       	lsr	r0
 9e0:	57 95       	ror	r21
 9e2:	47 95       	ror	r20
 9e4:	37 95       	ror	r19
 9e6:	27 95       	ror	r18
 9e8:	ba 95       	dec	r27
 9ea:	c9 f7       	brne	.-14     	; 0x9de <__ultoa_invert+0xa2>
 9ec:	62 0f       	add	r22, r18
 9ee:	73 1f       	adc	r23, r19
 9f0:	84 1f       	adc	r24, r20
 9f2:	95 1f       	adc	r25, r21
 9f4:	a0 1d       	adc	r26, r0
 9f6:	08 95       	ret

000009f8 <__prologue_saves__>:
 9f8:	2f 92       	push	r2
 9fa:	3f 92       	push	r3
 9fc:	4f 92       	push	r4
 9fe:	5f 92       	push	r5
 a00:	6f 92       	push	r6
 a02:	7f 92       	push	r7
 a04:	8f 92       	push	r8
 a06:	9f 92       	push	r9
 a08:	af 92       	push	r10
 a0a:	bf 92       	push	r11
 a0c:	cf 92       	push	r12
 a0e:	df 92       	push	r13
 a10:	ef 92       	push	r14
 a12:	ff 92       	push	r15
 a14:	0f 93       	push	r16
 a16:	1f 93       	push	r17
 a18:	cf 93       	push	r28
 a1a:	df 93       	push	r29
 a1c:	cd b7       	in	r28, 0x3d	; 61
 a1e:	de b7       	in	r29, 0x3e	; 62
 a20:	ca 1b       	sub	r28, r26
 a22:	db 0b       	sbc	r29, r27
 a24:	0f b6       	in	r0, 0x3f	; 63
 a26:	f8 94       	cli
 a28:	de bf       	out	0x3e, r29	; 62
 a2a:	0f be       	out	0x3f, r0	; 63
 a2c:	cd bf       	out	0x3d, r28	; 61
 a2e:	09 94       	ijmp

00000a30 <__epilogue_restores__>:
 a30:	2a 88       	ldd	r2, Y+18	; 0x12
 a32:	39 88       	ldd	r3, Y+17	; 0x11
 a34:	48 88       	ldd	r4, Y+16	; 0x10
 a36:	5f 84       	ldd	r5, Y+15	; 0x0f
 a38:	6e 84       	ldd	r6, Y+14	; 0x0e
 a3a:	7d 84       	ldd	r7, Y+13	; 0x0d
 a3c:	8c 84       	ldd	r8, Y+12	; 0x0c
 a3e:	9b 84       	ldd	r9, Y+11	; 0x0b
 a40:	aa 84       	ldd	r10, Y+10	; 0x0a
 a42:	b9 84       	ldd	r11, Y+9	; 0x09
 a44:	c8 84       	ldd	r12, Y+8	; 0x08
 a46:	df 80       	ldd	r13, Y+7	; 0x07
 a48:	ee 80       	ldd	r14, Y+6	; 0x06
 a4a:	fd 80       	ldd	r15, Y+5	; 0x05
 a4c:	0c 81       	ldd	r16, Y+4	; 0x04
 a4e:	1b 81       	ldd	r17, Y+3	; 0x03
 a50:	aa 81       	ldd	r26, Y+2	; 0x02
 a52:	b9 81       	ldd	r27, Y+1	; 0x01
 a54:	ce 0f       	add	r28, r30
 a56:	d1 1d       	adc	r29, r1
 a58:	0f b6       	in	r0, 0x3f	; 63
 a5a:	f8 94       	cli
 a5c:	de bf       	out	0x3e, r29	; 62
 a5e:	0f be       	out	0x3f, r0	; 63
 a60:	cd bf       	out	0x3d, r28	; 61
 a62:	ed 01       	movw	r28, r26
 a64:	08 95       	ret

00000a66 <_exit>:
 a66:	f8 94       	cli

00000a68 <__stop_program>:
 a68:	ff cf       	rjmp	.-2      	; 0xa68 <__stop_program>
